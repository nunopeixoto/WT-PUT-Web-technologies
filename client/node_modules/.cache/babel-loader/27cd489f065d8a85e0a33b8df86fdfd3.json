{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Dashboard.vue","mtime":1546953872993},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$assign from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PersonalReadingService from '@/services/PersonalReadingService';\nimport BookService from '@/services/BookService';\nimport LibraryService from '@/services/LibraryService';\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      search: '',\n      date: new Date().toISOString().substr(0, 10),\n      modalStart: false,\n      modalEnd: false,\n      editedItem: {\n        title: '',\n        authors: '',\n        reading: '',\n        startDate: '',\n        endDate: ''\n      },\n      // dailySalesChart: {\n      //   data: {\n      //     labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n      //     series: [\n      //       [12, 17, 7, 17, 23, 18, 38]\n      //     ]\n      //   },\n      //   options: {\n      //     lineSmooth: this.$chartist.Interpolation.cardinal({\n      //       tension: 0\n      //     }),\n      //     low: 0,\n      //     high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   }\n      // },\n      // dataCompletedTasksChart: {\n      //   data: {\n      //     labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n      //     series: [\n      //       [230, 750, 450, 300, 280, 240, 200, 190]\n      //     ]\n      //   },\n      //   options: {\n      //     lineSmooth: this.$chartist.Interpolation.cardinal({\n      //       tension: 0\n      //     }),\n      //     low: 0,\n      //     high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   }\n      // },\n      // emailsSubscriptionChart: {\n      //   data: {\n      //     labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n      //     series: [\n      //       [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n      //     ]\n      //   },\n      //   options: {\n      //     axisX: {\n      //       showGrid: false\n      //     },\n      //     low: 0,\n      //     high: 1000,\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 5,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   },\n      //   responsiveOptions: [\n      //     ['screen and (max-width: 640px)', {\n      //       seriesBarDistance: 5,\n      //       axisX: {\n      //         labelInterpolationFnc: function (value) {\n      //           return value[0]\n      //         }\n      //       }\n      //     }]\n      //   ]\n      // },\n      headers: [{\n        sortable: false,\n        text: 'Id',\n        value: 'personalReadingId'\n      }, {\n        sortable: false,\n        text: 'Title',\n        value: 'title'\n      }, {\n        sortable: false,\n        text: 'Author(s)',\n        value: 'authors'\n      }, {\n        sortable: true,\n        text: 'Number of pages',\n        value: 'numberpages'\n      }, {\n        sortable: true,\n        text: 'Library',\n        value: 'library'\n      }, {\n        sortable: false,\n        text: 'Read status',\n        value: 'reading',\n        align: 'right'\n      }, {\n        sortable: false,\n        text: 'Comment',\n        value: 'comment',\n        align: 'right'\n      }],\n      books: [],\n      optionsRead: ['Not read', 'Finished', 'Reading in progress'],\n      list: {\n        0: false,\n        1: false,\n        2: false\n      },\n      defaultItem: {\n        title: '',\n        authors: '',\n        reading: '',\n        comment: ''\n      },\n      editedIndex: -1\n    };\n  },\n  methods: {\n    complete: function complete(index) {\n      this.list[index] = !this.list[index];\n    },\n    editItem: function editItem(item) {\n      this.editedIndex = this.books.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n      this.dialog = true;\n    },\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var updatedReading, reading, dateToSend, personalReadingId;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.editedIndex > -1)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                updatedReading = this.editedItem.reading;\n                reading = null;\n                dateToSend = '';\n                personalReadingId = this.editedItem.personalReadingId;\n\n                if (updatedReading == 'Not read') {\n                  reading = 0;\n                } else if (updatedReading.substring(0, 8) == 'Finished') {\n                  reading = 1;\n                  dateToSend = this.date;\n                  this.editedItem.reading = 'Finished in ' + dateToSend;\n                } else if (updatedReading == 'Reading in progress') {\n                  reading = 2;\n                  dateToSend = this.date;\n                  this.editedItem.reading = 'Started at ' + dateToSend;\n                }\n\n                _context.next = 9;\n                return PersonalReadingService.updateReading(personalReadingId, reading, dateToSend);\n\n              case 9:\n                _Object$assign(this.books[this.editedIndex], this.editedItem);\n\n                _context.next = 13;\n                break;\n\n              case 12:\n                this.books.push(this.editedItem);\n\n              case 13:\n                this.close();\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 16]]);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    close: function close() {\n      var _this = this;\n\n      this.dialog = false;\n      setTimeout(function () {\n        _this.editedItem = _Object$assign({}, _this.defaultItem);\n        _this.editedIndex = -1;\n      }, 300);\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var response, i, obj, bookId, book, reading;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.books = [];\n              _context2.next = 3;\n              return PersonalReadingService.getPersonalReadingByLibraryUser(this.$store.state.user.id, 0);\n\n            case 3:\n              response = _context2.sent.data;\n              i = 0;\n\n            case 5:\n              if (!(i < response.length)) {\n                _context2.next = 28;\n                break;\n              }\n\n              obj = response[i];\n              bookId = obj['BookId'];\n              _context2.next = 10;\n              return BookService.getBookById(bookId);\n\n            case 10:\n              book = _context2.sent.data;\n              reading = '';\n\n              if (obj['reading'] == 0) {\n                reading = 'Not read';\n              } else if (obj['reading'] == 1) {\n                reading = 'Finished in ' + obj['endDate'];\n              } else if (obj['reading'] == 2) {\n                reading = 'Started in ' + obj['startDate'];\n              }\n\n              _context2.t0 = this.books;\n              _context2.t1 = obj['id'];\n              _context2.t2 = book.title;\n              _context2.t3 = book.authors;\n              _context2.t4 = book.nrPages;\n              _context2.next = 20;\n              return LibraryService.getLibraryById(obj['LibraryId']);\n\n            case 20:\n              _context2.t5 = _context2.sent.data.name;\n              _context2.t6 = reading;\n              _context2.t7 = obj['comment'];\n              _context2.t8 = {\n                personalReadingId: _context2.t1,\n                title: _context2.t2,\n                authors: _context2.t3,\n                numberpages: _context2.t4,\n                library: _context2.t5,\n                reading: _context2.t6,\n                comment: _context2.t7\n              };\n\n              _context2.t0.push.call(_context2.t0, _context2.t8);\n\n            case 25:\n              i++;\n              _context2.next = 5;\n              break;\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuPA,OAAA,sBAAA,MAAA,mCAAA;AACA,OAAA,WAAA,MAAA,wBAAA;AACA,OAAA,cAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,IAAA,IAAA,GAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAHA;AAIA,MAAA,UAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA;AALA,OANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA,EAKA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OALA,EAUA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,WAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAVA,EAeA;AACA,QAAA,QAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,iBAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAfA,EAoBA;AACA,QAAA,QAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OApBA,EAyBA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,aAFA;AAGA,QAAA,KAAA,EAAA,SAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAzBA,EA+BA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,KAAA,EAAA,SAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OA/BA,CAvFA;AA6HA,MAAA,KAAA,EAAA,EA7HA;AA8HA,MAAA,WAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,qBAAA,CA9HA;AA+HA,MAAA,IAAA,EAAA;AACA,WAAA,KADA;AAEA,WAAA,KAFA;AAGA,WAAA;AAHA,OA/HA;AAoIA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA;AAJA,OApIA;AA0IA,MAAA,WAAA,EAAA,CAAA;AA1IA,KAAA;AA4IA,GA9IA;AA+IA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AACA,WAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,IAJA,EAIA;AACA,WAAA,WAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,UAAA,GAAA,eAAA,EAAA,EAAA,IAAA,CAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KARA;AASA,IAAA,IATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAWA,KAAA,WAAA,GAAA,CAAA,CAXA;AAAA;AAAA;AAAA;;AAYA,gBAAA,cAZA,GAYA,KAAA,UAAA,CAAA,OAZA;AAaA,gBAAA,OAbA,GAaA,IAbA;AAcA,gBAAA,UAdA,GAcA,EAdA;AAeA,gBAAA,iBAfA,GAeA,KAAA,UAAA,CAAA,iBAfA;;AAgBA,oBAAA,cAAA,IAAA,UAAA,EAAA;AACA,kBAAA,OAAA,GAAA,CAAA;AACA,iBAFA,MAEA,IAAA,cAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,KAAA,UAAA,EAAA;AACA,kBAAA,OAAA,GAAA,CAAA;AACA,kBAAA,UAAA,GAAA,KAAA,IAAA;AACA,uBAAA,UAAA,CAAA,OAAA,GAAA,iBAAA,UAAA;AACA,iBAJA,MAIA,IAAA,cAAA,IAAA,qBAAA,EAAA;AACA,kBAAA,OAAA,GAAA,CAAA;AACA,kBAAA,UAAA,GAAA,KAAA,IAAA;AACA,uBAAA,UAAA,CAAA,OAAA,GAAA,gBAAA,UAAA;AACA;;AA1BA;AAAA,uBA2BA,sBAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,OAAA,EAAA,UAAA,CA3BA;;AAAA;AA4BA,+BAAA,KAAA,KAAA,CAAA,KAAA,WAAA,CAAA,EAAA,KAAA,UAAA;;AA5BA;AAAA;;AAAA;AA8BA,qBAAA,KAAA,CAAA,IAAA,CAAA,KAAA,UAAA;;AA9BA;AAgCA,qBAAA,KAAA;AAhCA;AAAA;;AAAA;AAAA;AAAA;AAkCA,gBAAA,KAAA,aAAA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqCA,IAAA,KArCA,mBAqCA;AAAA;;AACA,WAAA,MAAA,GAAA,KAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,eAAA,EAAA,EAAA,KAAA,CAAA,WAAA,CAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,CAAA,CAAA;AACA,OAHA,EAGA,GAHA,CAAA;AAIA;AA3CA,GA/IA;AA4LA,EAAA,OA5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6LA,mBAAA,KAAA,GAAA,EAAA;AA7LA;AAAA,qBA8LA,sBAAA,CAAA,+BAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,CA9LA;;AAAA;AA8LA,cAAA,QA9LA,kBA8LA,IA9LA;AA+LA,cAAA,CA/LA,GA+LA,CA/LA;;AAAA;AAAA,oBA+LA,CAAA,GAAA,QAAA,CAAA,MA/LA;AAAA;AAAA;AAAA;;AAgMA,cAAA,GAhMA,GAgMA,QAAA,CAAA,CAAA,CAhMA;AAiMA,cAAA,MAjMA,GAiMA,GAAA,CAAA,QAAA,CAjMA;AAAA;AAAA,qBAkMA,WAAA,CAAA,WAAA,CAAA,MAAA,CAlMA;;AAAA;AAkMA,cAAA,IAlMA,kBAkMA,IAlMA;AAmMA,cAAA,OAnMA,GAmMA,EAnMA;;AAoMA,kBAAA,GAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA;AACA,gBAAA,OAAA,GAAA,UAAA;AACA,eAFA,MAEA,IAAA,GAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA;AACA,gBAAA,OAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,CAAA;AACA,eAFA,MAEA,IAAA,GAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA;AACA,gBAAA,OAAA,GAAA,gBAAA,GAAA,CAAA,WAAA,CAAA;AACA;;AA1MA,6BA2MA,KAAA,KA3MA;AAAA,6BA4MA,GAAA,CAAA,IAAA,CA5MA;AAAA,6BA6MA,IAAA,CAAA,KA7MA;AAAA,6BA8MA,IAAA,CAAA,OA9MA;AAAA,6BA+MA,IAAA,CAAA,OA/MA;AAAA;AAAA,qBAgNA,cAAA,CAAA,cAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAhNA;;AAAA;AAAA,4CAgNA,IAhNA,CAgNA,IAhNA;AAAA,6BAiNA,OAjNA;AAAA,6BAkNA,GAAA,CAAA,SAAA,CAlNA;AAAA;AA4MA,gBAAA,iBA5MA;AA6MA,gBAAA,KA7MA;AA8MA,gBAAA,OA9MA;AA+MA,gBAAA,WA/MA;AAgNA,gBAAA,OAhNA;AAiNA,gBAAA,OAjNA;AAkNA,gBAAA,OAlNA;AAAA;;AAAA,2BA2MA,IA3MA;;AAAA;AA+LA,cAAA,CAAA,EA/LA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<script>\n/* eslint-disable */\n</script>\n\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout wrap>\n      <!-- <v-flex\n          md12\n          sm12\n          lg4\n        >\n          <material-chart-card\n            :data=\"dailySalesChart.data\"\n            :options=\"dailySalesChart.options\"\n            color=\"info\"\n            type=\"Line\"\n          >\n            <h4 class=\"title font-weight-light\">Daily Sales</h4>\n            <p class=\"category d-inline-flex font-weight-light\">\n              <v-icon\n                color=\"green\"\n                small\n              >\n                mdi-arrow-up\n              </v-icon>\n              <span class=\"green--text\">55%</span>&nbsp;\n              increase in today's sales\n            </p>\n  \n            <template slot=\"actions\">\n              <v-icon\n                class=\"mr-2\"\n                small\n              >\n                mdi-clock-outline\n              </v-icon>\n              <span class=\"caption grey--text font-weight-light\">updated 4 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        md12\n        sm12\n        lg4\n      >\n        <material-chart-card\n          :data=\"emailsSubscriptionChart.data\"\n          :options=\"emailsSubscriptionChart.options\"\n          :responsive-options=\"emailsSubscriptionChart.responsiveOptions\"\n          color=\"red\"\n          type=\"Bar\"\n        >\n          <h4 class=\"title font-weight-light\">Email Subscription</h4>\n          <p class=\"category d-inline-flex font-weight-light\">Last Campaign Performance</p>\n\n<template slot=\"actions\">\n  <v-icon class=\"mr-2\" small>\n    mdi-clock-outline\n  </v-icon>\n  <span class=\"caption grey--text font-weight-light\">updated 10 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        md12\n        sm12\n        lg4\n      >\n        <material-chart-card\n          :data=\"dataCompletedTasksChart.data\"\n          :options=\"dataCompletedTasksChart.options\"\n          color=\"green\"\n          type=\"Line\"\n        >\n          <h3 class=\"title font-weight-light\">Completed Tasks</h3>\n          <p class=\"category d-inline-flex font-weight-light\">Last Last Campaign Performance</p>\n\n<template slot=\"actions\">\n  <v-icon class=\"mr-2\" small>\n    mdi-clock-outline\n  </v-icon>\n  <span class=\"caption grey--text font-weight-light\">campaign sent 26 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        sm6\n        xs12\n        md6\n        lg3\n      >\n        <material-stats-card\n          color=\"green\"\n          icon=\"mdi-store\"\n          title=\"Revenue\"\n          value=\"$34,245\"\n          sub-icon=\"mdi-calendar\"\n          sub-text=\"Last 24 Hours\"\n        />\n      </v-flex>\n      <v-flex\n        sm6\n        xs12\n        md6\n        lg3\n      >\n        <material-stats-card\n          color=\"orange\"\n          icon=\"mdi-content-copy\"\n          title=\"Used Space\"\n          value=\"49/50\"\n          small-value=\"GB\"\n          sub-icon=\"mdi-alert\"\n          sub-icon-color=\"error\"\n          sub-text=\"Get More Space...\"\n          sub-text-color=\"text-primary\"\n        />\n      </v-flex>\n      <v-flex\n        sm6\n        xs12\n        md6\n        lg3\n      >\n        <material-stats-card\n          color=\"red\"\n          icon=\"mdi-information-outline\"\n          title=\"Fixed Issues\"\n          value=\"75\"\n          sub-icon=\"mdi-tag\"\n          sub-text=\"Tracked from Github\"\n        />\n      </v-flex>\n      <v-flex\n        sm6\n        xs12\n        md6\n        lg3\n      >\n        <material-stats-card\n          color=\"info\"\n          icon=\"mdi-twitter\"\n          title=\"Followers\"\n          value=\"+245\"\n          sub-icon=\"mdi-update\"\n          sub-text=\"Just Updated\"\n        />\n      </v-flex> -->\n      <v-flex\n        md12\n        lg12\n      >\n        <material-card\n          color=\"green\"\n          title=\"Your books\"\n          text=\"Manage all the books you have from all librarys you're a member.\"\n        >\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"search\"\n          label=\"Search\"\n          single-line\n          style=\"max-width:200px;\"\n          hide-details\n        ></v-text-field>\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"books\"\n            :search=\"search\"\n          >\n<template slot=\"headerCell\" slot-scope=\"{ header }\">\n  <span class=\"font-weight-light text-warning text--darken-3\" v-text=\"header.text\" />\n</template>\n\n<template slot=\"items\" slot-scope=\"props\">\n  <td>\n    {{ props.item.personalReadingId }}</td>\n  <td>{{ props.item.title }}</td>\n  <td>{{ props.item.authors }}</td>\n  <td>{{ props.item.numberpages }}</td>\n  <td>{{ props.item.library }}</td>\n  <td>\n    <v-icon small @click=\"editItem(props.item)\" color=\"indigo\">edit</v-icon> {{ props.item.reading }} </td>\n  <td>{{ props.item.comment }}</td>\n</template>\n          </v-data-table>\n        </material-card>\n      </v-flex>\n    </v-layout>\n    <!-- <v-layout row justify-center>\n      <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-card>\n          <v-card-title class=\"headline\">Use Google's location service?</v-card-title>\n          <v-card-text>Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.</v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"green darken-1\" flat @click=\"dialog = false\">Disagree</v-btn>\n            <v-btn color=\"green darken-1\" flat @click=\"dialog = false\">Agree</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-layout> -->\n    <v-dialog v-model=\"dialog\" max-width=\"700px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">Change the read status of {{editedItem.title}}</span>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-container grid-list-md>\n                <v-layout wrap>\n                  <v-flex xs12 sm6 md4>\n                    <!-- <v-text-field v-model=\"editedItem.reading\" label=\"Calories\"></v-text-field> -->\n                          <v-select v-model=\"editedItem.reading\" v-bind:items=\"this.optionsRead\" label=\"Read status\" ></v-select>\n                          <v-dialog ref=\"dialogStart\" v-if=\"editedItem.reading=='Reading in progress'\" v-model=\"modalStart\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\n                      <v-text-field slot=\"activator\" v-model=\"date\" label=\"Started in\" prepend-icon=\"event\" readonly></v-text-field>\n                      <v-date-picker v-model=\"date\" scrollable>\n                        <v-spacer></v-spacer>\n                        <v-btn flat color=\"primary\" @click=\"modalStart = false\">Cancel</v-btn>\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogStart.save(date)\">OK</v-btn>\n                      </v-date-picker>\n                    </v-dialog>\n                    <v-dialog ref=\"dialogEnd\" v-if=\"editedItem.reading=='Finished'\" v-model=\"modalEnd\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\n                      <v-text-field slot=\"activator\" v-model=\"date\" label=\"Finished in\" prepend-icon=\"event\" readonly></v-text-field>\n                      <v-date-picker v-model=\"date\" scrollable>\n                        <v-spacer></v-spacer>\n                        <v-btn flat color=\"primary\" @click=\"modalEnd = false\">Cancel</v-btn>\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogEnd.save(date)\">OK</v-btn>\n                      </v-date-picker>\n                    </v-dialog>\n                  </v-flex>\n                </v-layout>\n              </v-container>\n            </v-card-text>\n  \n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" flat @click=\"close\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n  </v-container>\n</template>\n\n<script>\n  import PersonalReadingService from '@/services/PersonalReadingService'\n  import BookService from '@/services/BookService'\n  import LibraryService from '@/services/LibraryService'\n  export default {\n    data() {\n      return {\n        dialog: false,\n        search: '',\n        date: new Date().toISOString().substr(0, 10),\n        modalStart: false,\n        modalEnd: false,\n        editedItem: {\n          title: '',\n          authors: '',\n          reading: '',\n          startDate: '',\n          endDate: ''\n        },\n        // dailySalesChart: {\n        //   data: {\n        //     labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        //     series: [\n        //       [12, 17, 7, 17, 23, 18, 38]\n        //     ]\n        //   },\n        //   options: {\n        //     lineSmooth: this.$chartist.Interpolation.cardinal({\n        //       tension: 0\n        //     }),\n        //     low: 0,\n        //     high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   }\n        // },\n        // dataCompletedTasksChart: {\n        //   data: {\n        //     labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n        //     series: [\n        //       [230, 750, 450, 300, 280, 240, 200, 190]\n        //     ]\n        //   },\n        //   options: {\n        //     lineSmooth: this.$chartist.Interpolation.cardinal({\n        //       tension: 0\n        //     }),\n        //     low: 0,\n        //     high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   }\n        // },\n        // emailsSubscriptionChart: {\n        //   data: {\n        //     labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n        //     series: [\n        //       [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n  \n        //     ]\n        //   },\n        //   options: {\n        //     axisX: {\n        //       showGrid: false\n        //     },\n        //     low: 0,\n        //     high: 1000,\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 5,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   },\n        //   responsiveOptions: [\n        //     ['screen and (max-width: 640px)', {\n        //       seriesBarDistance: 5,\n        //       axisX: {\n        //         labelInterpolationFnc: function (value) {\n        //           return value[0]\n        //         }\n        //       }\n        //     }]\n        //   ]\n        // },\n        headers: [{\n            sortable: false,\n            text: 'Id',\n            value: 'personalReadingId'\n          },\n          {\n            sortable: false,\n            text: 'Title',\n            value: 'title'\n          },\n          {\n            sortable: false,\n            text: 'Author(s)',\n            value: 'authors'\n          },\n          {\n            sortable: true,\n            text: 'Number of pages',\n            value: 'numberpages'\n          },\n          {\n            sortable: true,\n            text: 'Library',\n            value: 'library'\n          },\n          {\n            sortable: false,\n            text: 'Read status',\n            value: 'reading',\n            align: 'right'\n          },\n          {\n            sortable: false,\n            text: 'Comment',\n            value: 'comment',\n            align: 'right'\n          }\n        ],\n        books: [],\n        optionsRead: ['Not read', 'Finished', 'Reading in progress'],\n        list: {\n          0: false,\n          1: false,\n          2: false\n        },\n        defaultItem: {\n          title: '',\n          authors: '',\n          reading: '',\n          comment: ''\n        },\n        editedIndex: -1\n      }\n    },\n    methods: {\n      complete(index) {\n        this.list[index] = !this.list[index]\n      },\n      editItem(item) {\n        this.editedIndex = this.books.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n      async save() {\n        try {\n          if (this.editedIndex > -1) {\n            let updatedReading = (this.editedItem).reading\n            let reading = null\n            let dateToSend = ''\n            let personalReadingId = (this.editedItem).personalReadingId\n            if (updatedReading == 'Not read') {\n              reading = 0\n            } else if (updatedReading.substring(0, 8) == 'Finished') {\n              reading = 1\n              dateToSend = this.date\n              this.editedItem.reading = 'Finished in ' + dateToSend\n            } else if (updatedReading == 'Reading in progress') {\n              reading = 2\n              dateToSend = this.date\n              this.editedItem.reading = 'Started at ' + dateToSend\n            }\n            await PersonalReadingService.updateReading(personalReadingId, reading, dateToSend)\n            Object.assign(this.books[this.editedIndex], this.editedItem)\n          } else {\n            this.books.push(this.editedItem)\n          }\n          this.close()\n        } catch (err) {\n          alert(err)\n        }\n      },\n      close() {\n        this.dialog = false\n        setTimeout(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      }\n    },\n    async mounted() {\n      this.books = []\n      const response = (await PersonalReadingService.getPersonalReadingByLibraryUser(this.$store.state.user.id, 0)).data\n      for (var i = 0; i < response.length; i++) {\n        var obj = response[i]\n        var bookId = obj['BookId']\n        const book = (await BookService.getBookById(bookId)).data\n        let reading = ''\n        if (obj['reading'] == 0) {\n          reading = 'Not read'\n        } else if (obj['reading'] == 1) {\n          reading = 'Finished in ' + obj['endDate']\n        } else if (obj['reading'] == 2) {\n          reading = 'Started in ' + obj['startDate']\n        }\n        this.books.push({\n          personalReadingId: obj['id'],\n          title: book.title,\n          authors: book.authors,\n          numberpages: book.nrPages,\n          library: (await LibraryService.getLibraryById(obj['LibraryId'])).data.name,\n          reading: reading,\n          comment: obj['comment'],\n        })\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src\\views"}]}