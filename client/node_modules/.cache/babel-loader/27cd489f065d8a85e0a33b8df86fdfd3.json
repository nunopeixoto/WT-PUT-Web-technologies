{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Dashboard.vue","mtime":1547334773863},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$assign from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PersonalReadingService from '@/services/PersonalReadingService';\nimport BookService from '@/services/BookService';\nimport LoanService from '@/services/LoanService';\nimport LibraryService from '@/services/LibraryService';\nimport AuthenticationService from '@/services/AuthenticationService';\nexport default {\n  data: function data() {\n    return {\n      snackbar: false,\n      top: true,\n      averageBooksCard: {\n        averagePagesMonth: '',\n        averagePagesDay: ''\n      },\n      lastFinishedBook: {\n        endDate: '',\n        title: '',\n        titleComplete: ''\n      },\n      currentlyReadingCard: {\n        bookName: '',\n        bookNameComplete: '',\n        libraryName: ''\n      },\n      booksReadFromLibrariesCard: {\n        valueText: null,\n        subtext: null\n      },\n      dialogReading: false,\n      dialogComment: false,\n      search: '',\n      date: new Date().toISOString().substr(0, 10),\n      modalStart: false,\n      modalEnd: false,\n      editedItem: {\n        title: '',\n        authors: '',\n        reading: '',\n        startDate: '',\n        endDate: ''\n      },\n      // dailySalesChart: {\n      //   data: {\n      //     labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n      //     series: [\n      //       [12, 17, 7, 17, 23, 18, 38]\n      //     ]\n      //   },\n      //   options: {\n      //     lineSmooth: this.$chartist.Interpolation.cardinal({\n      //       tension: 0\n      //     }),\n      //     low: 0,\n      //     high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   }\n      // },\n      // dataCompletedTasksChart: {\n      //   data: {\n      //     labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n      //     series: [\n      //       [230, 750, 450, 300, 280, 240, 200, 190]\n      //     ]\n      //   },\n      //   options: {\n      //     lineSmooth: this.$chartist.Interpolation.cardinal({\n      //       tension: 0\n      //     }),\n      //     low: 0,\n      //     high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   }\n      // },\n      // emailsSubscriptionChart: {\n      //   data: {\n      //     labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n      //     series: [\n      //       [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n      //     ]\n      //   },\n      //   options: {\n      //     axisX: {\n      //       showGrid: false\n      //     },\n      //     low: 0,\n      //     high: 1000,\n      //     chartPadding: {\n      //       top: 0,\n      //       right: 5,\n      //       bottom: 0,\n      //       left: 0\n      //     }\n      //   },\n      //   responsiveOptions: [\n      //     ['screen and (max-width: 640px)', {\n      //       seriesBarDistance: 5,\n      //       axisX: {\n      //         labelInterpolationFnc: function (value) {\n      //           return value[0]\n      //         }\n      //       }\n      //     }]\n      //   ]\n      // },\n      headers: [{\n        class: 'idcolumn',\n        sortable: true,\n        text: 'Id',\n        value: 'loanId'\n      }, {\n        sortable: false,\n        text: 'Book',\n        value: 'booktitle'\n      }, {\n        sortable: false,\n        text: 'From',\n        value: 'from'\n      }, {\n        sortable: true,\n        text: 'To',\n        value: 'to'\n      }, {\n        sortable: true,\n        text: 'Start date',\n        value: 'startDate'\n      }],\n      activeLoans: [],\n      list: {\n        0: false,\n        1: false,\n        2: false\n      },\n      defaultItem: {\n        title: '',\n        authors: '',\n        reading: '',\n        comment: ''\n      },\n      editedIndex: -1\n    };\n  },\n  methods: {\n    complete: function complete(index) {\n      this.list[index] = !this.list[index];\n    },\n    editReading: function editReading(item) {\n      this.editedIndex = this.books.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n      this.dialogReading = true;\n    },\n    editComment: function editComment(item) {\n      this.editedIndex = this.books.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n      this.dialogComment = true;\n    },\n    saveReading: function () {\n      var _saveReading = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var updatedReading, reading, dateToSend, personalReadingId;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.editedIndex > -1)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                updatedReading = this.editedItem.reading;\n                reading = null;\n                dateToSend = null;\n                personalReadingId = this.editedItem.personalReadingId;\n\n                if (updatedReading == 'Not read') {\n                  reading = 0;\n                } else if (updatedReading.substring(0, 8) == 'Finished') {\n                  reading = 1;\n                  dateToSend = this.date;\n                  this.editedItem.reading = 'Finished in ' + dateToSend;\n                } else if (updatedReading == 'Reading in progress') {\n                  reading = 2;\n                  dateToSend = this.date;\n                  this.editedItem.reading = 'Started at ' + dateToSend;\n                }\n\n                _context.next = 9;\n                return PersonalReadingService.updateReading(personalReadingId, reading, dateToSend);\n\n              case 9:\n                _Object$assign(this.books[this.editedIndex], this.editedItem);\n\n                _context.next = 13;\n                break;\n\n              case 12:\n                this.books.push(this.editedItem);\n\n              case 13:\n                this.closeDialogReading();\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 16]]);\n      }));\n\n      function saveReading() {\n        return _saveReading.apply(this, arguments);\n      }\n\n      return saveReading;\n    }(),\n    saveComment: function () {\n      var _saveComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var updatedComment, personalReadingId;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!(this.editedIndex > -1)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                updatedComment = this.editedItem.comment;\n                personalReadingId = this.editedItem.personalReadingId;\n                _context2.next = 6;\n                return PersonalReadingService.updateComment(personalReadingId, updatedComment);\n\n              case 6:\n                _Object$assign(this.books[this.editedIndex], this.editedItem);\n\n                _context2.next = 10;\n                break;\n\n              case 9:\n                this.books.push(this.editedItem);\n\n              case 10:\n                this.closeDialogComment();\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](0);\n                alert(_context2.t0);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 13]]);\n      }));\n\n      function saveComment() {\n        return _saveComment.apply(this, arguments);\n      }\n\n      return saveComment;\n    }(),\n    closeDialogReading: function closeDialogReading() {\n      var _this = this;\n\n      this.dialogReading = false;\n      setTimeout(function () {\n        _this.editedItem = _Object$assign({}, _this.defaultItem);\n        _this.editedIndex = -1;\n      }, 300);\n    },\n    closeDialogComment: function closeDialogComment() {\n      var _this2 = this;\n\n      this.dialogComment = false;\n      setTimeout(function () {\n        _this2.editedItem = _Object$assign({}, _this2.defaultItem);\n        _this2.editedIndex = -1;\n      }, 300);\n    },\n    findLastFinishedBook: function () {\n      var _findLastFinishedBook = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var lastFinishedPersonalReading, lastBook, bookTitle;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return PersonalReadingService.findLastFinishedPersonalReading(this.$store.state.user.id);\n\n              case 3:\n                lastFinishedPersonalReading = _context3.sent;\n\n                if (!(lastFinishedPersonalReading.data.length == 1)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 7;\n                return BookService.getBookById(lastFinishedPersonalReading.data[0].BookId);\n\n              case 7:\n                lastBook = _context3.sent.data;\n                this.lastFinishedBook.titleComplete = lastBook.title;\n                bookTitle = null;\n\n                if (lastBook.title.length > 24) {\n                  bookTitle = lastBook.title.substring(0, 20) + '...';\n                } else {\n                  bookTitle = lastBook.title;\n                }\n\n                this.lastFinishedBook.title = bookTitle;\n                this.lastFinishedBook.endDate = 'Finished in ' + lastFinishedPersonalReading.data[0].endDate;\n                _context3.next = 17;\n                break;\n\n              case 15:\n                this.lastFinishedBook.title = 'No finished book.';\n                this.lastFinishedBook.endDate = 'None';\n\n              case 17:\n                _context3.next = 22;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.t0 = _context3[\"catch\"](0);\n                alert(_context3.t0);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 19]]);\n      }));\n\n      function findLastFinishedBook() {\n        return _findLastFinishedBook.apply(this, arguments);\n      }\n\n      return findLastFinishedBook;\n    }(),\n    findCurrentlyReadingBook: function () {\n      var _findCurrentlyReadingBook = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var currentlyReadingPersonalReading, currentBook, currentLibrary, BookName;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return PersonalReadingService.findCurrentlyReadingPersonalReading(this.$store.state.user.id);\n\n              case 3:\n                currentlyReadingPersonalReading = _context4.sent;\n\n                if (!(currentlyReadingPersonalReading.data.length == 1)) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                _context4.next = 7;\n                return BookService.getBookById(currentlyReadingPersonalReading.data[0].BookId);\n\n              case 7:\n                currentBook = _context4.sent.data;\n                _context4.next = 10;\n                return LibraryService.getLibraryById(currentlyReadingPersonalReading.data[0].LibraryId);\n\n              case 10:\n                currentLibrary = _context4.sent.data;\n                this.currentlyReadingCard.bookNameComplete = currentBook.title;\n                BookName = null;\n\n                if (currentBook.title.length > 24) {\n                  BookName = currentBook.title.substring(0, 20) + '...';\n                } else {\n                  BookName = currentBook.title;\n                }\n\n                this.currentlyReadingCard.bookName = BookName;\n                this.currentlyReadingCard.libraryName = 'From ' + currentLibrary.name;\n                _context4.next = 20;\n                break;\n\n              case 18:\n                this.currentlyReadingCard.bookName = 'None';\n                this.currentlyReadingCard.libraryName = 'None';\n\n              case 20:\n                _context4.next = 25;\n                break;\n\n              case 22:\n                _context4.prev = 22;\n                _context4.t0 = _context4[\"catch\"](0);\n                alert(_context4.t0);\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 22]]);\n      }));\n\n      function findCurrentlyReadingBook() {\n        return _findCurrentlyReadingBook.apply(this, arguments);\n      }\n\n      return findCurrentlyReadingBook;\n    }(),\n    findBooksReadFromLibraries: function () {\n      var _findBooksReadFromLibraries = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var booksReadFromLibraries, booksRead, totalBooks, percentage;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return PersonalReadingService.findBooksReadFromLibraries(this.$store.state.user.id);\n\n              case 3:\n                booksReadFromLibraries = _context5.sent.data;\n                booksRead = booksReadFromLibraries.booksRead;\n                totalBooks = booksReadFromLibraries.totalBooks;\n                percentage = Math.round(booksRead / totalBooks * 100);\n                this.booksReadFromLibrariesCard.valueText = booksRead + '/' + totalBooks;\n                this.booksReadFromLibrariesCard.subtext = \"It looks like you've read \".concat(percentage, \"% of your books.\");\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                alert(_context5.t0);\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 11]]);\n      }));\n\n      function findBooksReadFromLibraries() {\n        return _findBooksReadFromLibraries.apply(this, arguments);\n      }\n\n      return findBooksReadFromLibraries;\n    }(),\n    findAverages: function () {\n      var _findAverages = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var averages;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return PersonalReadingService.findAverages(this.$store.state.user.id);\n\n              case 3:\n                averages = _context6.sent.data;\n                this.averageBooksCard.averagePagesDay = averages.averagePagesDay + '';\n                this.averageBooksCard.averagePagesMonth = \"Which means you've been reading \".concat(averages.averagePagesMonth, \" pages per month.\");\n                _context6.next = 11;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](0);\n                alert(_context6.t0);\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 8]]);\n      }));\n\n      function findAverages() {\n        return _findAverages.apply(this, arguments);\n      }\n\n      return findAverages;\n    }()\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      if (from.path === '/login') {\n        alert('hey');\n        snackbar = true;\n      } else {\n        snackbar = false;\n      }\n\n      next();\n    });\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7() {\n      var response, i, obj, personalReading, bookId, book, from, to, toUsername, startDate, _book, x;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.findLastFinishedBook();\n              this.findCurrentlyReadingBook();\n              this.findBooksReadFromLibraries();\n              this.findAverages();\n              this.activeLoans = [];\n              _context7.next = 7;\n              return LoanService.getLoansByUserId(this.$store.state.user.id, 0);\n\n            case 7:\n              response = _context7.sent.data;\n              i = 0;\n\n            case 9:\n              if (!(i < response.length)) {\n                _context7.next = 41;\n                break;\n              }\n\n              obj = response[i];\n\n              if (!(obj['ExternalBookId'] == null)) {\n                _context7.next = 31;\n                break;\n              }\n\n              _context7.next = 14;\n              return PersonalReadingService.getPersonalReadingById(obj['PersonalReadingId']);\n\n            case 14:\n              personalReading = _context7.sent.data;\n              bookId = personalReading.BookId;\n              _context7.next = 18;\n              return BookService.getBookById(bookId);\n\n            case 18:\n              book = _context7.sent.data;\n              _context7.next = 21;\n              return AuthenticationService.getUserById(obj['UserLenterId']);\n\n            case 21:\n              from = _context7.sent.data;\n              _context7.next = 24;\n              return AuthenticationService.getUserById(obj['UserBorrowerId']);\n\n            case 24:\n              to = _context7.sent.data;\n              toUsername = '';\n\n              if (obj['UserBorrowerId'] == null) {\n                toUsername = obj['status'].substring(8, obj['status'].length);\n              } else {\n                toUsername = '@' + to.username;\n              }\n\n              startDate = obj['startDate'];\n              this.activeLoans.push({\n                loanId: obj['id'],\n                bookTitle: book.title,\n                from: '@' + from.username,\n                to: toUsername,\n                startDate: startDate.substring(0, 10)\n              });\n              _context7.next = 38;\n              break;\n\n            case 31:\n              _context7.next = 33;\n              return BookService.getBookById(obj['ExternalBookId']);\n\n            case 33:\n              _book = _context7.sent.data;\n              from = obj['status'].substring(10, obj['status'].length);\n              to = '@' + this.$store.state.user.username;\n              startDate = obj['startDate'];\n              this.activeLoans.push({\n                loanId: obj['id'],\n                bookTitle: _book.title,\n                from: from,\n                to: to,\n                startDate: startDate.substring(0, 10)\n              });\n\n            case 38:\n              i++;\n              _context7.next = 9;\n              break;\n\n            case 41:\n              x = document.getElementsByClassName(\"idcolumn\");\n              x[0].style.display = \"none\";\n\n            case 43:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\n/* eslint-disable */\n</script>\n\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout wrap>\n      <v-snackbar color=\"success\"  :top=\"top\" v-model=\"snackbar\" dark>\n              <v-icon color=\"white\" class=\"mr-3\">mdi-bell-plus</v-icon>\n              <div>Welcome to <b>Vue Material Dashboard</b> - a beautiful freebie for every web developer.</div>\n              <v-icon size=\"16\" @click=\"snackbar = false\">mdi-close-circle</v-icon>\n            </v-snackbar>\n      <!-- <v-flex\n              md12\n              sm12\n              lg4\n            >\n              <material-chart-card\n                :data=\"dailySalesChart.data\"\n                :options=\"dailySalesChart.options\"\n                color=\"info\"\n                type=\"Line\"\n              >\n                <h4 class=\"title font-weight-light\">Daily Sales</h4>\n                <p class=\"category d-inline-flex font-weight-light\">\n                  <v-icon\n                    color=\"green\"\n                    small\n                  >\n                    mdi-arrow-up\n                  </v-icon>\n                  <span class=\"green--text\">55%</span>&nbsp;\n                  increase in today's sales\n                </p>\n      \n                <template slot=\"actions\">\n                  <v-icon\n                    class=\"mr-2\"\n                    small\n                  >\n                    mdi-clock-outline\n                  </v-icon>\n                  <span class=\"caption grey--text font-weight-light\">updated 4 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        md12\n        sm12\n        lg4\n      >\n        <material-chart-card\n          :data=\"emailsSubscriptionChart.data\"\n          :options=\"emailsSubscriptionChart.options\"\n          :responsive-options=\"emailsSubscriptionChart.responsiveOptions\"\n          color=\"red\"\n          type=\"Bar\"\n        >\n          <h4 class=\"title font-weight-light\">Email Subscription</h4>\n          <p class=\"category d-inline-flex font-weight-light\">Last Campaign Performance</p>\n\n<template slot=\"actions\">\n  <v-icon class=\"mr-2\" small>\n    mdi-clock-outline\n  </v-icon>\n  <span class=\"caption grey--text font-weight-light\">updated 10 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex>\n      <v-flex\n        md12\n        sm12\n        lg4\n      >\n        <material-chart-card\n          :data=\"dataCompletedTasksChart.data\"\n          :options=\"dataCompletedTasksChart.options\"\n          color=\"green\"\n          type=\"Line\"\n        >\n          <h3 class=\"title font-weight-light\">Completed Tasks</h3>\n          <p class=\"category d-inline-flex font-weight-light\">Last Last Campaign Performance</p>\n\n<template slot=\"actions\">\n  <v-icon class=\"mr-2\" small>\n    mdi-clock-outline\n  </v-icon>\n  <span class=\"caption grey--text font-weight-light\">campaign sent 26 minutes ago</span>\n</template>\n        </material-chart-card>\n      </v-flex> -->\n      <!-- stats card -->\n      <v-flex sm6 xs12 md6 lg3 >\n        <material-stats-card color=\"info\" icon=\"mdi-book-open\" title=\"Average pages read per day\" :value=\"this.averageBooksCard.averagePagesDay\" sub-icon=\"mdi-update\" :sub-text=\"this.averageBooksCard.averagePagesMonth\"/>\n      </v-flex>\n      <v-flex sm6 xs12 md6 lg3>\n        <material-stats-card color=\"orange\" icon=\"mdi-library\" title=\"Books read from libraries\" :value=\"this.booksReadFromLibrariesCard.valueText\" small-value=\"Books\" sub-icon=\"mdi-read\" :sub-text=\"this.booksReadFromLibrariesCard.subtext\"/>\n      </v-flex>\n      <v-flex sm6 xs12 md6 lg3>\n        <v-tooltip bottom>\n          <material-stats-card slot=\"activator\" color=\"red\" icon=\"mdi-book\" title=\"Currently reading\" :value=\"this.currentlyReadingCard.bookName\" sub-icon=\"mdi-library\" :sub-text=\"this.currentlyReadingCard.libraryName\"/>\n          <span style=\"font-size:20px; color:white;\">{{this.currentlyReadingCard.bookNameComplete}}</span>\n        </v-tooltip>\n      </v-flex>\n      <v-flex sm6 xs12 md6 lg3>\n        <v-tooltip bottom>\n          <material-stats-card slot=\"activator\" color=\"green\" icon=\"mdi-check\" title=\"Last finished book\" :value=\"this.lastFinishedBook.title\" sub-icon=\"mdi-calendar\" :sub-text=\"this.lastFinishedBook.endDate\"/>\n          <span style=\"font-size:20px; color:white;\">{{this.lastFinishedBook.titleComplete}}</span>\n        </v-tooltip>\n      </v-flex>\n      <!-- search texfield + datatable -->\n      <v-flex md12 lg12>\n        <material-card color=\"green\" title=\"Your loans\" text=\"Manage all the loans you're a part of.\">\n        <v-text-field v-model=\"search\" append-icon=\"search\" label=\"Search\" single-line style=\"max-width:200px;\" hide-details></v-text-field>\n          <v-data-table :headers=\"headers\" :items=\"activeLoans\" :search=\"search\"> \n<template slot=\"headerCell\" slot-scope=\"{ header }\">\n  <span class=\"font-weight-light text-warning text--darken-3\" v-text=\"header.text\" />\n</template>\n\n<template slot=\"items\" slot-scope=\"props\">\n  <td style=\"display:none;\">\n    {{ props.item.loanId }}</td>\n  <td>{{ props.item.bookTitle }}</td>\n  <td>{{ props.item.from }}</td>\n  <td>{{ props.item.to }}</td>\n  <td>{{ props.item.startDate }}</td>\n</template>\n          </v-data-table>\n        </material-card>\n      </v-flex>\n    </v-layout>\n   <!-- <v-dialog v-model=\"dialogReading\" max-width=\"700px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">Change the read status of {{editedItem.title}}</span>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-container grid-list-md>\n                <v-layout wrap>\n                  <v-flex xs12 sm6 md4>\n                    <!-- <v-text-field v-model=\"editedItem.reading\" label=\"Calories\"></v-text-field> \n                          <v-select v-model=\"editedItem.reading\" v-bind:items=\"this.optionsRead\" label=\"Read status\" ></v-select>\n                          <v-dialog ref=\"dialogStart\" v-if=\"editedItem.reading=='Reading in progress'\" v-model=\"modalStart\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\n                      <v-text-field slot=\"activator\" v-model=\"date\" label=\"Started in\" prepend-icon=\"event\" readonly></v-text-field>\n                      <v-date-picker v-model=\"date\" scrollable>\n                        <v-spacer></v-spacer>\n                        <v-btn flat color=\"primary\" @click=\"modalStart = false\">Cancel</v-btn>\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogStart.save(date)\">OK</v-btn>\n                      </v-date-picker>\n                    </v-dialog>\n                    <v-dialog ref=\"dialogEnd\" v-if=\"editedItem.reading=='Finished'\" v-model=\"modalEnd\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\n                      <v-text-field slot=\"activator\" v-model=\"date\" label=\"Finished in\" prepend-icon=\"event\" readonly></v-text-field>\n                      <v-date-picker v-model=\"date\" scrollable>\n                        <v-spacer></v-spacer>\n                        <v-btn flat color=\"primary\" @click=\"modalEnd = false\">Cancel</v-btn>\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogEnd.save(date)\">OK</v-btn>\n                      </v-date-picker>\n                    </v-dialog>\n                  </v-flex>\n                </v-layout>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" flat @click=\"closeDialogReading\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" flat @click=\"saveReading\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialogComment\" max-width=\"900px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Comment {{editedItem.title}}</span>\n        </v-card-title>\n         <v-card-text>\n          <v-container grid-list-md>\n            <v-layout wrap>\n              <v-flex xs12 md12>\n                <v-textarea v-model=\"editedItem.comment\" label=\"Comment\"></v-textarea>\n              </v-flex>\n            </v-layout>\n          </v-container>\n         </v-card-text>\n         <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" flat @click=\"closeDialogComment\">Cancel</v-btn>\n          <v-btn color=\"blue darken-1\" flat @click=\"saveComment\">Save</v-btn>\n         </v-card-actions>\n        </v-card>\n        </v-dialog> -->\n  </v-container>\n</template>\n\n<script>\n  import PersonalReadingService from '@/services/PersonalReadingService'\n  import BookService from '@/services/BookService'\n  import LoanService from '@/services/LoanService'\n  import LibraryService from '@/services/LibraryService'\n  import AuthenticationService from '@/services/AuthenticationService'\n  export default {\n    data() {\n      return {\n        snackbar: false,\n        top:true,\n        averageBooksCard: {\n          averagePagesMonth: '',\n          averagePagesDay: '',\n        },\n        lastFinishedBook: {\n          endDate: '',\n          title: '',\n          titleComplete: ''\n        },\n        currentlyReadingCard: {\n          bookName: '',\n          bookNameComplete: '',\n          libraryName: ''\n        },\n        booksReadFromLibrariesCard : {\n          valueText: null,\n          subtext: null,\n        },\n        dialogReading: false,\n        dialogComment: false,\n        search: '',\n        date: new Date().toISOString().substr(0, 10),\n        modalStart: false,\n        modalEnd: false,\n        editedItem: {\n          title: '',\n          authors: '',\n          reading: '',\n          startDate: '',\n          endDate: ''\n        },\n        // dailySalesChart: {\n        //   data: {\n        //     labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        //     series: [\n        //       [12, 17, 7, 17, 23, 18, 38]\n        //     ]\n        //   },\n        //   options: {\n        //     lineSmooth: this.$chartist.Interpolation.cardinal({\n        //       tension: 0\n        //     }),\n        //     low: 0,\n        //     high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   }\n        // },\n        // dataCompletedTasksChart: {\n        //   data: {\n        //     labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n        //     series: [\n        //       [230, 750, 450, 300, 280, 240, 200, 190]\n        //     ]\n        //   },\n        //   options: {\n        //     lineSmooth: this.$chartist.Interpolation.cardinal({\n        //       tension: 0\n        //     }),\n        //     low: 0,\n        //     high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   }\n        // },\n        // emailsSubscriptionChart: {\n        //   data: {\n        //     labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n        //     series: [\n        //       [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n  \n        //     ]\n        //   },\n        //   options: {\n        //     axisX: {\n        //       showGrid: false\n        //     },\n        //     low: 0,\n        //     high: 1000,\n        //     chartPadding: {\n        //       top: 0,\n        //       right: 5,\n        //       bottom: 0,\n        //       left: 0\n        //     }\n        //   },\n        //   responsiveOptions: [\n        //     ['screen and (max-width: 640px)', {\n        //       seriesBarDistance: 5,\n        //       axisX: {\n        //         labelInterpolationFnc: function (value) {\n        //           return value[0]\n        //         }\n        //       }\n        //     }]\n        //   ]\n        // },\n        headers: [{\n            class: 'idcolumn',\n            sortable: true,\n            text: 'Id',\n            value: 'loanId',\n          },\n          {\n            sortable: false,\n            text: 'Book',\n            value: 'booktitle'\n          },\n          {\n            sortable: false,\n            text: 'From',\n            value: 'from'\n          },\n          {\n            sortable: true,\n            text: 'To',\n            value: 'to'\n          },\n          {\n            sortable: true,\n            text: 'Start date',\n            value: 'startDate'\n          }\n        ],\n        activeLoans: [],\n        list: {\n          0: false,\n          1: false,\n          2: false\n        },\n        defaultItem: {\n          title: '',\n          authors: '',\n          reading: '',\n          comment: ''\n        },\n        editedIndex: -1\n      }\n    },\n    methods: {\n      complete(index) {\n        this.list[index] = !this.list[index]\n      },\n      editReading(item) {\n        this.editedIndex = this.books.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogReading = true\n      },\n      editComment(item) {\n        this.editedIndex = this.books.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogComment = true\n      },\n      async saveReading() {\n        try {\n          if (this.editedIndex > -1) {\n            let updatedReading = (this.editedItem).reading\n            let reading = null\n            let dateToSend = null\n            let personalReadingId = (this.editedItem).personalReadingId\n            if (updatedReading == 'Not read') {\n              reading = 0\n            } else if (updatedReading.substring(0, 8) == 'Finished') {\n              reading = 1\n              dateToSend = this.date\n              this.editedItem.reading = 'Finished in ' + dateToSend\n            } else if (updatedReading == 'Reading in progress') {\n              reading = 2\n              dateToSend = this.date\n              this.editedItem.reading = 'Started at ' + dateToSend\n            }\n            await PersonalReadingService.updateReading(personalReadingId, reading, dateToSend)\n            Object.assign(this.books[this.editedIndex], this.editedItem)\n          } else {\n            this.books.push(this.editedItem)\n          }\n          this.closeDialogReading()\n        } catch (err) {\n          alert(err)\n        }\n      },\n      async saveComment() {\n        try {\n          if (this.editedIndex > -1) {\n            let updatedComment = (this.editedItem).comment\n            let personalReadingId = (this.editedItem).personalReadingId\n            await PersonalReadingService.updateComment(personalReadingId, updatedComment)\n            Object.assign(this.books[this.editedIndex], this.editedItem)\n          } else {\n            this.books.push(this.editedItem)\n          }\n          this.closeDialogComment()\n        } catch (err) {\n          alert(err)\n        }\n      },\n      closeDialogReading() {\n        this.dialogReading = false\n        setTimeout(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      },\n      closeDialogComment() {\n        this.dialogComment = false\n        setTimeout(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      },\n      async findLastFinishedBook(){\n        try {\n            const lastFinishedPersonalReading = await PersonalReadingService.findLastFinishedPersonalReading(this.$store.state.user.id)\n            if (lastFinishedPersonalReading.data.length==1){\n            const lastBook = (await BookService.getBookById(lastFinishedPersonalReading.data[0].BookId)).data\n            this.lastFinishedBook.titleComplete = lastBook.title\n            let bookTitle = null\n            if(lastBook.title.length > 24){\n              bookTitle = lastBook.title.substring(0,20) +'...'\n            } else {\n              bookTitle = lastBook.title\n            }\n            this.lastFinishedBook.title = bookTitle\n            this.lastFinishedBook.endDate = 'Finished in ' +lastFinishedPersonalReading.data[0].endDate\n          } else {\n            this.lastFinishedBook.title = 'No finished book.'\n            this.lastFinishedBook.endDate = 'None'\n          }\n        } catch (err) {\n          alert(err)\n        }\n      },\n      async findCurrentlyReadingBook(){\n        try {\n          const currentlyReadingPersonalReading = await PersonalReadingService.findCurrentlyReadingPersonalReading(this.$store.state.user.id)\n          if (currentlyReadingPersonalReading.data.length==1){\n            const currentBook = (await BookService.getBookById(currentlyReadingPersonalReading.data[0].BookId)).data\n            const currentLibrary = (await LibraryService.getLibraryById(currentlyReadingPersonalReading.data[0].LibraryId)).data \n            this.currentlyReadingCard.bookNameComplete = currentBook.title\n            let BookName = null\n            if(currentBook.title.length > 24) {\n              BookName = currentBook.title.substring(0, 20) + '...'\n            } else {\n              BookName = currentBook.title\n            }\n            this.currentlyReadingCard.bookName =  BookName\n            this.currentlyReadingCard.libraryName = 'From ' +currentLibrary.name\n          } else {\n            this.currentlyReadingCard.bookName =  'None'\n            this.currentlyReadingCard.libraryName = 'None'\n          }\n        } catch (err) {\n          alert(err)\n        }\n      },\n      async findBooksReadFromLibraries(){\n        try {\n          const booksReadFromLibraries = (await PersonalReadingService.findBooksReadFromLibraries(this.$store.state.user.id)).data\n          let booksRead = booksReadFromLibraries.booksRead\n          let totalBooks = booksReadFromLibraries.totalBooks\n          let percentage = Math.round((booksRead / totalBooks ) * 100)\n          this.booksReadFromLibrariesCard.valueText= booksRead+'/'+totalBooks\n          this.booksReadFromLibrariesCard.subtext = `It looks like you've read ${percentage}% of your books.`\n        } catch (err) {\n          alert(err)\n        }\n      },\n      async findAverages(){\n        try {\n          const averages = (await PersonalReadingService.findAverages(this.$store.state.user.id)).data\n          this.averageBooksCard.averagePagesDay = averages.averagePagesDay+''\n          this.averageBooksCard.averagePagesMonth = `Which means you've been reading ${averages.averagePagesMonth} pages per month.`\n          \n        } catch (err) {\n          alert(err)\n        }\n      }\n    },\n    beforeRouteEnter (to, from, next) {\n  next(vm => {\n    if (from.path === '/login') {\n      alert('hey')\n      snackbar=true\n    } else {\n      snackbar = false\n    }\n\n    next()\n  });\n}, \n    async mounted() {\n      this.findLastFinishedBook()\n      this.findCurrentlyReadingBook()\n      this.findBooksReadFromLibraries()\n      this.findAverages()\n      this.activeLoans = []\n      const response = (await LoanService.getLoansByUserId(this.$store.state.user.id, 0)).data\n      for (var i = 0; i < response.length; i++) {\n        var obj = response[i]\n        if (obj['ExternalBookId'] == null) {\n          var personalReading = (await PersonalReadingService.getPersonalReadingById(obj['PersonalReadingId'])).data\n          var bookId = personalReading.BookId\n          const book = (await BookService.getBookById(bookId)).data\n          var from = (await AuthenticationService.getUserById(obj['UserLenterId'])).data\n          var to = (await AuthenticationService.getUserById(obj['UserBorrowerId'])).data\n          var toUsername = ''\n          if (obj['UserBorrowerId'] == null ) {\n            toUsername = obj['status'].substring(8, obj['status'].length)\n          } else {\n            toUsername = '@'+to.username\n          }\n          var startDate = obj['startDate']\n          this.activeLoans.push({\n            loanId: obj['id'],\n            bookTitle: book.title,\n            from: '@'+from.username,\n            to: toUsername,\n            startDate: startDate.substring(0,10)\n          })\n        } else {\n          const book = (await BookService.getBookById(obj['ExternalBookId'])).data\n          var from = obj['status'].substring(10, obj['status'].length)\n          var to = '@'+this.$store.state.user.username\n          var startDate = obj['startDate']\n          this.activeLoans.push({\n            loanId: obj['id'],\n            bookTitle: book.title,\n            from: from,\n            to: to,\n            startDate: startDate.substring(0,10)\n          })\n        }\n      }\n      var x = document.getElementsByClassName(\"idcolumn\")\n      x[0].style.display = \"none\"\n    }\n  }\n</script>\n\n<style scoped>\n  \n</style>\n"],"sourceRoot":"src\\views"}]}