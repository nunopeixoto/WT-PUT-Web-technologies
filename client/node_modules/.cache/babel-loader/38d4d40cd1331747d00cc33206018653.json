{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\Register.vue","mtime":1547649473802},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService';\nexport default {\n  data: function data() {\n    return {\n      email: '',\n      name: '',\n      surname: '',\n      birthDate: '',\n      password: '',\n      username: '',\n      error: null,\n      success: null,\n      datepicker: false,\n      required: function required(value) {\n        return !!value || 'Required.';\n      }\n    };\n  },\n  methods: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.error = null;\n                _context.next = 4;\n                return AuthenticationService.register({\n                  email: this.email,\n                  username: this.username,\n                  password: this.password,\n                  name: this.name,\n                  surname: this.surname,\n                  birthDate: this.birthDate\n                });\n\n              case 4:\n                response = _context.sent;\n                // this.$store.dispatch('setTokegitn', response.data.token)\n                this.$store.dispatch('setUser', response.data.user);\n                this.success = 'Your account was registered successfully. Please verify your e-mail.';\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                this.success = null;\n                this.error = _context.t0.response.data.error;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function register() {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  },\n  mounted: function mounted() {\n    if (this.$store.state.isUserLoggedIn) {\n      this.$router.push('Dashboard');\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,OAAA,qBAAA,MAAA,kCAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,KAAA,EAAA,IAPA;AAQA,MAAA,OAAA,EAAA,IARA;AASA,MAAA,UAAA,EAAA,KATA;AAUA,MAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,WAAA;AAAA;AAVA,KAAA;AAYA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,KAAA,GAAA,IAAA;AAHA;AAAA,uBAIA,qBAAA,CAAA,QAAA,CAAA;AACA,kBAAA,KAAA,EAAA,KAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,QAAA,EAAA,KAAA,QAHA;AAIA,kBAAA,IAAA,EAAA,KAAA,IAJA;AAKA,kBAAA,OAAA,EAAA,KAAA,OALA;AAMA,kBAAA,SAAA,EAAA,KAAA;AANA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAYA;AACA,qBAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,qBAAA,OAAA,GAAA,sEAAA;AAdA;AAAA;;AAAA;AAAA;AAAA;AAgBA,qBAAA,OAAA,GAAA,IAAA;AACA,qBAAA,KAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,KAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAfA;AAoCA,EAAA,OApCA,qBAoCA;AACA,QAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,WAAA;AACA;AAEA;AAzCA,CAAA","sourcesContent":["<script>/*eslint-disable */ </script>\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout justify-center wrap>\n      <v-flex xs12 md8>\n        <material-card color=\"green\" title=\"Register\">\n          <v-form>\n            <v-container py-0>\n              <v-layout wrap>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Email\" required :rules=\"[required]\" v-model=\"email\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Name\" required :rules=\"[required]\" v-model=\"name\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Surname\" required :rules=\"[required]\" v-model=\"surname\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-menu :close-on-content-click=\"false\" v-model=\"datepicker\" :nudge-right=\"40\" lazy transition=\"scale-transition\" offset-y full-width min-width=\"290px\">\n                  <v-text-field slot=\"activator\" v-model=\"birthDate\" label=\"Birth date\" prepend-icon=\"event\" readonly></v-text-field>\n                  <v-date-picker v-model=\"birthDate\" @input=\"datepicker = false\"></v-date-picker>\n                </v-menu>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Username\" required :rules=\"[required]\" type=\"text\" v-model=\"username\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Password\" required :rules=\"[required]\" type=\"password\" v-model=\"password\" autocomplete=\"new-password\"></v-text-field>\n                </v-flex>\n                <v-alert outline v-if=\"success\" :value=\"true\" type=\"success\">\n                  {{success}}.\n                </v-alert>\n                <v-alert outline  v-if=\"error\" :value=\"true\" type=\"error\">\n                 {{error}}\n                </v-alert>\n                <v-flex xs12 text-xs-right>\n                  <v-btn class=\"mx-0 font-weight-light\" @click=\"register\" color=\"success\">\n                    Register\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-form>\n        </material-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport AuthenticationService from '@/services/AuthenticationService'\nexport default {\n    data() {\n      return {\n        email: '',\n        name: '',\n        surname: '',\n        birthDate: '',\n        password: '',\n        username: '',\n        error: null,\n        success: null,\n        datepicker: false,\n        required: (value) => !!value || 'Required.'\n      }\n    },\n    methods: {\n      async register() {\n        try {\n          this.error = null\n          const response = await AuthenticationService.register({\n            email: this.email,\n            username: this.username,\n            password: this.password,\n            name: this.name, \n            surname: this.surname,\n            birthDate: this.birthDate\n          })\n          // this.$store.dispatch('setTokegitn', response.data.token)\n          this.$store.dispatch('setUser', response.data.user)\n          this.success = 'Your account was registered successfully. Please verify your e-mail.'\n        } catch (error) {\n          this.success = null\n          this.error = error.response.data.error\n        }\n      }\n    },\n    mounted () {\n      if (this.$store.state.isUserLoggedIn){\n        this.$router.push('Dashboard')\n      }\n\n    }\n  }\n</script>\n"],"sourceRoot":"src\\views"}]}