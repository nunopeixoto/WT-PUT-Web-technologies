{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\RegisterEnhanced.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\RegisterEnhanced.vue","mtime":1546628263446},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\q1w2\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService';\nimport LibraryService from '@/services/LibraryService';\nexport default {\n  data: function data() {\n    return {\n      email: this.$route.params.email,\n      password: null,\n      username: null,\n      confirmed: true,\n      error: null,\n      success: null,\n      required: function required(value) {\n        return !!value || 'Required.';\n      }\n    };\n  },\n  methods: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, cenas;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.error = null;\n                _context.next = 4;\n                return AuthenticationService.enhancedregister({\n                  email: this.email,\n                  username: this.username,\n                  password: this.password,\n                  confirmed: true\n                });\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return LibraryService.becomeLibraryGuest(this.$route.params.email, this.$route.params.libraryId);\n\n              case 7:\n                cenas = _context.sent;\n                // this.$store.dispatch('setTokegitn', response.data.token)\n                //this.$store.dispatch('setUser', response.data.user)\n                this.success = 'Your account was registered successfully'; // this.$router.push({\n                //   name: 'login'\n                // })\n\n                if (cenas.data.message == 'Success') {\n                  this.$router.push({\n                    path: '/login'\n                  });\n                }\n\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                this.success = null;\n\n                if (_context.t0.response.data.error) {\n                  this.error = _context.t0.response.data.error;\n                } else {\n                  this.error = 'Error';\n                }\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      function register() {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }\n};",{"version":3,"sources":["RegisterEnhanced.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,qBAAA,MAAA,kCAAA;AACA,OAAA,cAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,IALA;AAMA,MAAA,OAAA,EAAA,IANA;AAOA,MAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,WAAA;AAAA;AAPA,KAAA;AASA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,KAAA,GAAA,IAAA;AAHA;AAAA,uBAIA,qBAAA,CAAA,gBAAA,CAAA;AACA,kBAAA,KAAA,EAAA,KAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,QAAA,EAAA,KAAA,QAHA;AAIA,kBAAA,SAAA,EAAA;AAJA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAAA;AAAA,uBAUA,cAAA,CAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAVA;;AAAA;AAUA,gBAAA,KAVA;AAWA;AACA;AAEA,qBAAA,OAAA,GAAA,0CAAA,CAdA,CAeA;AACA;AACA;;AACA,oBAAA,KAAA,CAAA,IAAA,CAAA,OAAA,IAAA,SAAA,EAAA;AACA,uBAAA,OAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA;AADA,mBAAA;AAGA;;AAtBA;AAAA;;AAAA;AAAA;AAAA;AAwBA,qBAAA,OAAA,GAAA,IAAA;;AACA,oBAAA,YAAA,QAAA,CAAA,IAAA,CAAA,KAAA,EAAA;AACA,uBAAA,KAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,iBAFA,MAEA;AACA,uBAAA,KAAA,GAAA,OAAA;AACA;;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAZA,CAAA","sourcesContent":["<script>/*eslint-disable */ </script>\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout justify-center wrap>\n      <v-flex xs12 md8>\n        <material-card color=\"green\" title=\"Register\">\n          <v-form>\n            <v-container py-0>\n              <v-layout wrap>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Email\" required :rules=\"[required]\" v-model=\"email\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Username\" required :rules=\"[required]\" type=\"text\" v-model=\"username\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Password\" required :rules=\"[required]\" type=\"password\" v-model=\"password\" autocomplete=\"new-password\"></v-text-field>\n                </v-flex>\n                <v-alert v-if=\"success\" :value=\"true\" type=\"success\">\n                  {{success}}.\n                </v-alert>\n                <v-alert  v-if=\"error\" :value=\"true\" type=\"error\">\n                 {{error}}\n                </v-alert>\n                <v-flex xs12 text-xs-right>\n                  <v-btn class=\"mx-0 font-weight-light\" @click=\"register\" color=\"success\">\n                    Register\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-form>\n        </material-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n  import AuthenticationService from '@/services/AuthenticationService'\n  import LibraryService from '@/services/LibraryService'\n  export default {\n    data() {\n      return {\n        email: this.$route.params.email,\n        password: null,\n        username: null,\n        confirmed: true,\n        error: null,\n        success: null,\n        required: (value) => !!value || 'Required.'\n      }\n    },\n    methods: {\n      async register() {\n        try {\n          this.error = null\n          const response = await AuthenticationService.enhancedregister({\n            email: this.email,\n            username: this.username,\n            password: this.password,\n            confirmed : true\n          })\n         const cenas = await LibraryService.becomeLibraryGuest(this.$route.params.email, this.$route.params.libraryId)\n          // this.$store.dispatch('setTokegitn', response.data.token)\n          //this.$store.dispatch('setUser', response.data.user)\n         \n          this.success = 'Your account was registered successfully'\n          // this.$router.push({\n          //   name: 'login'\n          // })\n          if((cenas.data.message) == 'Success'){\n            this.$router.push({\n              path:'/login'\n            })\n          }\n        } catch (error) {\n          this.success = null\n          if(error.response.data.error){\n          this.error = error.response.data.error\n          }else{\n            this.error = 'Error'\n          }\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src\\views"}]}