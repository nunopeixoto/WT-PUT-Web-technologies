{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nuno_\\Desktop\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nuno_\\Desktop\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\client\\src\\views\\Login.vue","mtime":1546574239452},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nuno_\\\\Desktop\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService';\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      error: null,\n      success: null,\n      required: function required(value) {\n        return !!value || 'Required.';\n      }\n    };\n  },\n  methods: {\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, userid;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.error = null;\n                _context.next = 4;\n                return AuthenticationService.login({\n                  username: this.username,\n                  password: this.password\n                });\n\n              case 4:\n                response = _context.sent;\n                userid = response.data.user.id;\n                this.success = 'Logged in successfully.';\n                this.$store.dispatch('setToken', response.data.token);\n                this.$store.dispatch('setUser', response.data.user);\n\n                if (response.data.userHasLibrary) {\n                  this.$store.dispatch('setHasLibrary', true);\n                  this.$store.dispatch('setLibrary', response.data.library);\n                } else if (response.data.userIsPartOfLibrary) {\n                  this.$store.dispatch('setIsPartOfLibrary', true);\n                  this.$store.dispatch('setLibrary', response.data.library);\n                } else {\n                  this.$store.dispatch('setHasLibrary', false);\n                  this.$store.dispatch('setIsPartOfLibrary', false);\n                }\n\n                this.$router.push({\n                  path: '/dashboard'\n                });\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                this.success = null;\n                this.error = _context.t0.response.data.error;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n\n      function login() {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.$store.dispatch('setToken', null);\n              this.$store.dispatch('setUser', null);\n              this.$store.dispatch('setHasLibrary', null);\n              this.$store.dispatch('setIsPartOfLibrary', null);\n              this.$store.dispatch('setLibrary', null);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,qBAAA,MAAA,kCAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,WAAA;AAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,KADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,KAAA,GAAA,IAAA;AAHA;AAAA,uBAIA,qBAAA,CAAA,KAAA,CAAA;AACA,kBAAA,QAAA,EAAA,KAAA,QADA;AAEA,kBAAA,QAAA,EAAA,KAAA;AAFA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAQA,gBAAA,MARA,GAQA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EARA;AASA,qBAAA,OAAA,GAAA,yBAAA;AACA,qBAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,qBAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;AACA,oBAAA,QAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,IAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,iBAHA,MAGA,IAAA,QAAA,CAAA,IAAA,CAAA,mBAAA,EAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,IAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,iBAHA,MAGA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,KAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,KAAA;AACA;;AAEA,qBAAA,OAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA;AADA,iBAAA;AAvBA;AAAA;;AAAA;AAAA;AAAA;AA2BA,qBAAA,OAAA,GAAA,IAAA;AACA,qBAAA,KAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,KAAA;;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAVA;AAkDA,EAAA,OAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA,mBAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,IAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA,IAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,IAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,IAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<script>/*eslint-disable */ </script>\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout justify-center wrap>\n      <v-flex xs12 md8>\n        <material-card color=\"green\" title=\"Login\">\n          <v-form>\n            <v-container py-0>\n              <v-layout wrap>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Username\" required :rules=\"[required]\" v-model=\"username\" class='purple-input' ></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                <v-text-field label=\"Password\" required :rules=\"[required]\" type=\"password\" v-model=\"password\" class='purple-input' ></v-text-field>\n                </v-flex>\n                <v-alert v-if=\"success\" :value=\"true\" type=\"success\">\n                  {{success}}.\n                </v-alert>\n                <v-alert  v-if=\"error\" :value=\"true\" type=\"error\">\n                 {{error}}\n                </v-alert>\n                <v-flex xs12 text-xs-right>\n                  <v-btn class=\"mx-0 font-weight-light\" @click=\"login\" color=\"success\">\n                    Login\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-form>\n        </material-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport AuthenticationService from '@/services/AuthenticationService'\nexport default {\n  data() {\n      return {\n        username: '',\n        password: '',\n        error: null,\n        success: null,\n        required: (value) => !!value || 'Required.'\n      }\n    },\n  methods: {\n      async login() {\n        try {\n          this.error = null\n          const response = await AuthenticationService.login({\n            username: this.username,\n            password: this.password\n          })\n          const userid = response.data.user.id\n          this.success = 'Logged in successfully.'\n          this.$store.dispatch('setToken', response.data.token)\n          this.$store.dispatch('setUser', response.data.user)\n          if(response.data.userHasLibrary){\n          this.$store.dispatch('setHasLibrary', true)\n          this.$store.dispatch('setLibrary', response.data.library)\n          } else if(response.data.userIsPartOfLibrary) {\n          this.$store.dispatch('setIsPartOfLibrary', true)\n          this.$store.dispatch('setLibrary', response.data.library)\n          }else{\n          this.$store.dispatch('setHasLibrary', false)  \n          this.$store.dispatch('setIsPartOfLibrary', false) \n          }\n          \n          this.$router.push({\n            path: '/dashboard'\n          })\n        } catch (error) {\n          this.success = null\n          this.error = error.response.data.error\n        }\n        // try {\n        //   const userHasLibrary = (await LibraryService.checkHasLibrary({\n        //       userId: userid\n        //     })).data\n        //   alert(userHasLibrary)\n        // }catch (err){\n        //   alert(err)\n        // }\n      }\n    },\n    async mounted () {\n      this.$store.dispatch('setToken', null)\n      this.$store.dispatch('setUser', null)\n      this.$store.dispatch('setHasLibrary', null)\n      this.$store.dispatch('setIsPartOfLibrary', null)\n      this.$store.dispatch('setLibrary', null)\n    }\n}\n</script>\n"],"sourceRoot":"src\\views"}]}