{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\AddBook.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\AddBook.vue","mtime":1547335419560},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BookManually from './BookManually'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport PersonalReadingService from '@/services/PersonalReadingService'\r\nimport BookService from '@/services/BookService'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n    name: 'add-book',\r\n    components: {\r\n        BookManually,\r\n        Datepicker,\r\n    },\r\n    data() {\r\n      return {\r\n      search: '',\r\n      bookListDb : [],\r\n      bookListApi : [],\r\n      openExpansionPanel: 1,\r\n      tabs: 0,\r\n      book: {\r\n            title: null,\r\n            subtitle: null,\r\n            authors: null,\r\n            publishDate: null,\r\n            nrPages: null,\r\n            publisher: null,\r\n            language: null,\r\n            thumbnailUrl : null\r\n      },\r\n      reading: null,\r\n          optionsReading : ['I already have read this book', 'I haven\\'t started it yet.', 'I\\'ve started but I haven\\'t finshed yet.'],\r\n          date: null,\r\n          dateStart: null,\r\n          dateEnd: null,\r\n          modal: false,\r\n          modalStart: null,\r\n          modalEnd: null,\r\n          error: null,\r\n          success: null,\r\n          dialog: false,\r\n          dialogStart: false,\r\n          //datepicker : false,\r\n          required: (value) => !!value || 'Required.'\r\n      }\r\n    },\r\n     methods: {\r\n       async createBook() {\r\n          this.error = null\r\n          if (!(this.subtitle)){\r\n            this.book.subtitle = 'No subtitle'\r\n          }\r\n          const areAllFieldsFilledIn = Object\r\n            .keys(this.book)\r\n            .every(key => !!this.book[key])\r\n            if (!areAllFieldsFilledIn){\r\n              this.error= 'Please fill all the required fields'\r\n              this.dialog = false\r\n              return\r\n            }\r\n          let readingStatus = 0\r\n          let startDate = null\r\n          let endDate = null\r\n          if (this.reading == this.optionsReading[0]){\r\n            readingStatus = 1\r\n            startDate = this.dateStart\r\n            endDate = this.dateEnd\r\n          } else if (this.reading == this.optionsReading[1]) {\r\n            readingStatus = 0\r\n          } else if (this.reading == this.optionsReading[2]) {\r\n            readingStatus = 2\r\n            startDate = this.dateStart\r\n          }\r\n          try {\r\n            const responseBook = await BookService.createBook(this.book)\r\n            let personalReadingResponse = null\r\n            if (responseBook.data.message){\r\n              personalReadingResponse = await PersonalReadingService.createPersonalReading({\r\n              LibraryId : this.$store.state.library.id,\r\n              UserId : this.$store.state.user.id,\r\n              BookId : this.$route.params.BookId,\r\n              reading: readingStatus,\r\n              startDate: startDate,\r\n              endDate: endDate\r\n            })\r\n            } else {\r\n            personalReadingResponse = await PersonalReadingService.createPersonalReading({\r\n              LibraryId : this.$store.state.library.id,\r\n              UserId : this.$store.state.user.id,\r\n              BookId : responseBook.data.id,\r\n              reading: readingStatus,\r\n              startDate: startDate,\r\n              endDate: endDate\r\n            })\r\n            \r\n            }\r\n            this.success = `${this.book.title} added to your library`\r\n            this.dialog = false\r\n            this.book.title = ' '\r\n            this.book.subtitle = ' '\r\n            this.book.authors = ' '\r\n            this.book.publishDate = ' '\r\n            this.book.nrPages = ' '\r\n            this.book.publisher = ' '\r\n            this.book.language = ' '\r\n            this.book.thumbnailUrl = ' '\r\n            this.reading = ''\r\n          } catch (error) {\r\n            this.success = null\r\n            this.dialog = false\r\n            this.error = error.response.data.error\r\n          }\r\n        },\r\n       async find() {\r\n        try {\r\n            const response = await BookService.findBook(this.search.text)\r\n            console.log(JSON.stringify(response))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }        \r\n      },\r\n      async changeCard(bookClicked){\r\n        if (bookClicked % 1 === 0){\r\n          let bookId = bookClicked\r\n          const book = await BookService.getBookById(bookId)\r\n          this.book.title = book.data.title\r\n          this.book.subtitle = book.data.subtitle\r\n          this.book.authors = book.data.authors\r\n          this.book.publishDate = book.data.publishDate.substring(0,10)\r\n          this.book.nrPages = book.data.nrPages\r\n          this.book.publisher = book.data.publisher\r\n          this.book.language = book.data.language\r\n          this.book.thumbnailUrl = book.data.thumbnailUrl\r\n       } else {\r\n          const bookApi = (Buffer.from(bookClicked, 'base64').toString('ascii'))\r\n          const bookJson = JSON.parse(bookApi)\r\n          this.book.title = bookJson.title\r\n          this.book.subtitle = bookJson.subtitle\r\n          this.book.authors =  JSON.stringify(bookJson.authors).replace(/\"/g,'').replace(/\\[/,'').replace(/\\]/, '').replace(/,/,', ')\r\n          this.book.publishDate = bookJson.publishedDate.substring(0,10)\r\n          this.book.nrPages = bookJson.pageCount\r\n          this.book.publisher =bookJson.publisher\r\n          this.book.language = bookJson.language\r\n          this.book.thumbnailUrl = bookJson.thumbnail\r\n       }\r\n       this.tabs = 0\r\n      }\r\n    },\r\n    rules: {\r\n        required: (value) => !!value || 'Required.'\r\n      },\r\n    watch: {\r\n      tabs: function (value) {\r\n        const route = {\r\n          name : 'Add a book'\r\n        }\r\n        route.query = {\r\n          tab: value              \r\n        }\r\n        this.$router.push(route)    \r\n       },\r\n       search: _.debounce(async function (value) {\r\n        this.bookListDb = []\r\n        this.bookListApi = []\r\n      \r\n      if (this.search !== '') { //only proceed if search is not empty\r\n        const route = {\r\n        path : 'add-book?tab=1'\r\n      }\r\n        route.query = {\r\n          search: this.search               \r\n        }\r\n        this.$router.push(route)        //puts search text on the query (URL)\r\n        //Search DB\r\n        const results = (await BookService.search(this.search)).data  //search the db for books with same title or author\r\n        for (var i = 0; i < results.length; i++){\r\n          var obj = results[i]\r\n          var BookId = obj['id']\r\n          let title = ''\r\n          let authors = ''\r\n          if (obj['title'].length > 51) {\r\n            title = obj['title'].substring(0, 51)+'...' \r\n          } else {\r\n            title = obj['title']\r\n          }\r\n          if (obj['authors'].length > 22) {\r\n            authors = obj['authors'].substring(0, 22)+'...' \r\n          } else {\r\n            authors = obj['authors']\r\n          }\r\n          var URL = BookId\r\n          var dbbook = new Book(\r\n              title,\r\n              URL, \r\n              authors,\r\n              obj['thumbnailUrl']\r\n          )       \r\n          this.bookListDb.push(dbbook)       //add new book to the array\r\n          this.openExpansionPanel = 0\r\n        }\r\n        //SEARCH API\r\n        const resultsApi = (await BookService.searchApi(this.search)).data  //search the db for books with same title\r\n        for (var i = 0; i < resultsApi.length; i++){\r\n          var obj = resultsApi[i]\r\n          const bookContent = Buffer.from(JSON.stringify(obj)).toString('base64')\r\n          let authorsString = ''\r\n          if (obj['authors'] != undefined) {\r\n            authorsString = JSON.stringify(obj['authors']).replace(/\"/g,'').replace(/\\[/,'').replace(/\\]/, '') //remove all brackets and quotations marks from string\r\n          }\r\n          let title = ''\r\n          if (obj['title'].length > 49) {\r\n            title = obj['title'].substring(0, 49)+'(...)' \r\n          } else {\r\n            title = obj['title']\r\n          }\r\n          let authors = ''\r\n          if (authorsString.length > 25) {\r\n            authors = authorsString.substring(0, 20)+'(...)' \r\n          } else {\r\n            authors = authorsString\r\n          }\r\n          var newBookApi = new Book(\r\n              title,\r\n              bookContent, \r\n              authors,\r\n              obj['thumbnail']\r\n          )\r\n          this.bookListApi.push(newBookApi)       //add new book to the array\r\n        }\r\n      }\r\n      \r\n    }, 700),\r\n    '$route.query.tab' : {    //puts the text of the query in the search textfield\r\n      immediate: true,\r\n      async handler (value) {\r\n        if(value==0){\r\n          this.tabs = 0\r\n        } else if (value==1){\r\n          this.tabs = 1\r\n        } \r\n      }\r\n    }\r\n    },\r\n    computed: {\r\n    filteredListDb() {\r\n      return this.bookListDb.filter(book => {\r\n          if (this.search != undefined) {\r\n            return book.title.toLowerCase().includes(this.search.toLowerCase()) || book.author.toLowerCase().includes(this.search.toLowerCase())\r\n          } else {\r\n            return ''\r\n          }\r\n      })\r\n    },\r\n    filteredListApi() {\r\n      if (this.search != undefined) {\r\n        return this.bookListApi.filter(book => {\r\n          return book.title.toLowerCase().includes(this.search.toLowerCase()) || book.author.toLowerCase().includes(this.search.toLowerCase())\r\n        })\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n  }\r\n}\r\nclass Book {\r\n  constructor(title, bookData, author, img) {\r\n    this.title = title;\r\n    this.bookData = bookData;\r\n    this.author = author;\r\n    this.img = img;\r\n  }\r\n}\r\n",{"version":3,"sources":["AddBook.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddBook.vue","sourceRoot":"src\\views","sourcesContent":["<script>/*eslint-disable */ </script>\r\n<template>\r\n  <v-container fill-height fluid grid-list-xl>\r\n    <v-layout justify-center wrap>\r\n      <v-flex xs12 md10>\r\n          <material-card class=\"card-tabs\" color=\"green\">\r\n          <v-flex slot=\"header\">\r\n            <v-tabs v-model=\"tabs\" color=\"transparent\" slider-color=\"white\" >\r\n              <span class=\"subheading font-weight-light mr-3\" style=\"align-self: center\">\r\n                    Add a book to {{$store.state.library.name}}:\r\n              </span>\r\n              <v-tab class=\"mr-3\">\r\n                <v-icon class=\"mr-2\">mdi-hand</v-icon>\r\n                Manually\r\n              </v-tab>\r\n              <v-tab class=\"mr-3\">\r\n                <v-icon class=\"mr-2\">mdi-database</v-icon>\r\n                Automatically\r\n              </v-tab>\r\n            </v-tabs>\r\n          </v-flex>\r\n          <v-tabs-items v-model=\"tabs\">\r\n            <!-- book manually -->\r\n            <v-tab-item :key=\"0\">\r\n            <h4 v-if=\"this.$route.params.BookId\"> Please confirm the data about the book you want to insert into {{$store.state.library.name}}   </h4>                \r\n            <panel title=\"AddBookManuallyPanel\">\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Title\"  required :rules=\"[required]\" v-model=\"book.title\"></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Subtitle\"  v-model=\"book.subtitle\"></v-text-field>\r\n                </v-flex> \r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Authors\"  required :rules=\"[required]\" v-model=\"book.authors\"></v-text-field>   \r\n                </v-flex>\r\n                <!-- <v-flex xs12 md12>\r\n                    <v-text-field slot=\"beforeCalendarHeader\" v-model=\"book.publishDate\" label=\"Publish date\"  readonly></v-text-field>\r\n                    <datepicker v-model=\"book.publishDate\" placeholder=\"Publish date\"></datepicker>\r\n                </v-flex> -->\r\n                <v-flex xs12 sm6 md4>\r\n                    <v-dialog ref=\"dialog\" v-model=\"modal\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\r\n                      <v-text-field slot=\"activator\"   v-model=\"book.publishDate\" label=\"Publish date\" prepend-icon=\"event\" readonly>\r\n                      </v-text-field>\r\n                      <v-date-picker v-model=\"book.publishDate\" scrollable>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn flat color=\"primary\" @click=\"modal = false\">Cancel</v-btn>\r\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialog.save(date)\">OK</v-btn>\r\n                      </v-date-picker>\r\n                    </v-dialog>\r\n                  </v-flex>\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Number of pages\" type=\"number\" required :rules=\"[required]\"  v-model=\"book.nrPages\"></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Publisher\"  v-model=\"book.publisher\"></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Language\" required :rules=\"[required]\"  v-model=\"book.language\"></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12 md12>\r\n                  <v-text-field label=\"Thumbnail URL\" required :rules=\"[required]\"  v-model=\"book.thumbnailUrl\"></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12 ms6 md4>\r\n                  <v-select :items=\"optionsReading\" v-model=\"reading\" label=\"Reading status\"></v-select>\r\n                  <v-dialog v-if=\"this.reading==this.optionsReading[0] || this.reading==this.optionsReading[2]\" ref=\"dialogStart\" v-model=\"modalStart\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\r\n                      <v-text-field slot=\"activator\" v-model=\"dateStart\" label=\"Start date\" prepend-icon=\"event\" readonly>\r\n                      </v-text-field>\r\n                      <v-date-picker v-model=\"dateStart\" scrollable>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn flat color=\"primary\" @click=\"modalStart = false\">Cancel</v-btn>\r\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogStart.save(date)\">OK</v-btn>\r\n                      </v-date-picker>\r\n                  </v-dialog>\r\n                  <v-dialog v-if=\"this.reading==this.optionsReading[0]\" ref=\"dialogEnd\" v-model=\"modalEnd\" :return-value.sync=\"date\" persistent lazy full-width width=\"290px\">\r\n                      <v-text-field slot=\"activator\" v-model=\"dateEnd\" label=\"Finish date\" prepend-icon=\"event\" readonly>\r\n                      </v-text-field>\r\n                      <v-date-picker v-model=\"dateEnd\" scrollable>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn flat color=\"primary\" @click=\"modalEnd = false\">Cancel</v-btn>\r\n                        <v-btn flat color=\"primary\" @click=\"$refs.dialogEnd.save(date)\">OK</v-btn>\r\n                      </v-date-picker>\r\n                    </v-dialog>  \r\n                </v-flex>\r\n                <br><br>\r\n                <v-flex xs6 text-xs-center>\r\n                <v-alert v-if=\"success\" :value=\"true\" type=\"success\">\r\n                  {{success}}.\r\n                </v-alert>\r\n                <v-alert  v-if=\"error\" :value=\"true\" type=\"error\">\r\n                  {{error}}\r\n                </v-alert>\r\n                </v-flex>\r\n                <br>\r\n                <v-flex xs12 text-xs-right>\r\n                <v-btn color=\"success\" @click=\"dialog = true\">\r\n                  Submit\r\n                </v-btn>\r\n                </v-flex>\r\n                <v-layout row justify-center>\r\n                  <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\r\n                    <v-card>\r\n                      <v-card-title class=\"headline\">Warning</v-card-title>\r\n                      <v-card-text>Are you sure you want to add {{book.title}} to your library?</v-card-text>\r\n                      <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"green darken-1\" flat @click=\"createBook\">Yes</v-btn>\r\n                        <v-btn color=\"green darken-1\" flat @click=\"dialog = false\">No</v-btn>\r\n                      </v-card-actions>\r\n                    </v-card>\r\n                  </v-dialog>\r\n                </v-layout>\r\n              </panel>\r\n                <!-- <datepicker v-model=\"date\" name=\"cenas\"></datepicker> -->\r\n            </v-tab-item>\r\n            <!-- book auto -->\r\n            <v-tab-item :key=\"1\">\r\n                <panel title=\"Add book automatically\">\r\n                  <v-form><br>\r\n                    <v-layout wrap>\r\n                    <v-flex xs12 md4>\r\n                    </v-flex>\r\n                    <v-flex xs12 md4>\r\n                        <v-text-field prepend-icon=\"mdi-magnify\" label=\"Search book by title or author\" v-model=\"search\"></v-text-field> \r\n                    </v-flex>\r\n                    </v-layout>\r\n                    <v-flex xs12 md12>\r\n                      <br>\r\n                      <v-expansion-panel :value=\"this.openExpansionPanel\">\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\"><v-icon>mdi-account</v-icon> Added by our users</div>\r\n                            <v-card>\r\n                              <div class=\"wrapper\">\r\n                                <div class=\"card\" v-for=\"book in filteredListDb\" :key=\"book.title\" @click=\"changeCard(book.bookData)\">\r\n                                  <small><center>By: {{ book.author }}</center></small>\r\n                                  <a>\r\n                                    <img v-bind:src=\"book.img\"/>\r\n                                    <h5>{{ book.title }}</h5>\r\n                                  </a>\r\n                                </div>\r\n                              </div>\r\n                            </v-card>\r\n                          </v-expansion-panel-content>\r\n                        </v-expansion-panel>\r\n                        <v-expansion-panel focusable>\r\n                          <v-expansion-panel-content>\r\n                              <div slot=\"header\"><v-icon>mdi-library-books</v-icon> Google Books database</div>\r\n                              <v-card>\r\n                                <div class=\"wrapper\">\r\n                                  <div class=\"card\" v-for=\"book in filteredListApi\" :key=\"book.title\" @click=\"changeCard(book.bookData)\">\r\n                                    <small><center>By: {{ book.author }}</center></small>\r\n                                    <a>\r\n                                      <img v-bind:src=\"book.img\"/>\r\n                                      <h5>{{ book.title }}</h5>\r\n                                    </a>\r\n                                  </div>\r\n                                </div>\r\n                              <v-btn dark class=\"cyan\" router to='newbookmanually'> Still can't find it? Add it manually </v-btn>\r\n                              </v-card>\r\n                            </v-expansion-panel-content>\r\n                        </v-expansion-panel>\r\n                        </v-flex>\r\n                  </v-form>\r\n                </panel>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n\r\n        </material-card>\r\n        \r\n      </v-flex>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport BookManually from './BookManually'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport PersonalReadingService from '@/services/PersonalReadingService'\r\nimport BookService from '@/services/BookService'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n    name: 'add-book',\r\n    components: {\r\n        BookManually,\r\n        Datepicker,\r\n    },\r\n    data() {\r\n      return {\r\n      search: '',\r\n      bookListDb : [],\r\n      bookListApi : [],\r\n      openExpansionPanel: 1,\r\n      tabs: 0,\r\n      book: {\r\n            title: null,\r\n            subtitle: null,\r\n            authors: null,\r\n            publishDate: null,\r\n            nrPages: null,\r\n            publisher: null,\r\n            language: null,\r\n            thumbnailUrl : null\r\n      },\r\n      reading: null,\r\n          optionsReading : ['I already have read this book', 'I haven\\'t started it yet.', 'I\\'ve started but I haven\\'t finshed yet.'],\r\n          date: null,\r\n          dateStart: null,\r\n          dateEnd: null,\r\n          modal: false,\r\n          modalStart: null,\r\n          modalEnd: null,\r\n          error: null,\r\n          success: null,\r\n          dialog: false,\r\n          dialogStart: false,\r\n          //datepicker : false,\r\n          required: (value) => !!value || 'Required.'\r\n      }\r\n    },\r\n     methods: {\r\n       async createBook() {\r\n          this.error = null\r\n          if (!(this.subtitle)){\r\n            this.book.subtitle = 'No subtitle'\r\n          }\r\n          const areAllFieldsFilledIn = Object\r\n            .keys(this.book)\r\n            .every(key => !!this.book[key])\r\n            if (!areAllFieldsFilledIn){\r\n              this.error= 'Please fill all the required fields'\r\n              this.dialog = false\r\n              return\r\n            }\r\n          let readingStatus = 0\r\n          let startDate = null\r\n          let endDate = null\r\n          if (this.reading == this.optionsReading[0]){\r\n            readingStatus = 1\r\n            startDate = this.dateStart\r\n            endDate = this.dateEnd\r\n          } else if (this.reading == this.optionsReading[1]) {\r\n            readingStatus = 0\r\n          } else if (this.reading == this.optionsReading[2]) {\r\n            readingStatus = 2\r\n            startDate = this.dateStart\r\n          }\r\n          try {\r\n            const responseBook = await BookService.createBook(this.book)\r\n            let personalReadingResponse = null\r\n            if (responseBook.data.message){\r\n              personalReadingResponse = await PersonalReadingService.createPersonalReading({\r\n              LibraryId : this.$store.state.library.id,\r\n              UserId : this.$store.state.user.id,\r\n              BookId : this.$route.params.BookId,\r\n              reading: readingStatus,\r\n              startDate: startDate,\r\n              endDate: endDate\r\n            })\r\n            } else {\r\n            personalReadingResponse = await PersonalReadingService.createPersonalReading({\r\n              LibraryId : this.$store.state.library.id,\r\n              UserId : this.$store.state.user.id,\r\n              BookId : responseBook.data.id,\r\n              reading: readingStatus,\r\n              startDate: startDate,\r\n              endDate: endDate\r\n            })\r\n            \r\n            }\r\n            this.success = `${this.book.title} added to your library`\r\n            this.dialog = false\r\n            this.book.title = ' '\r\n            this.book.subtitle = ' '\r\n            this.book.authors = ' '\r\n            this.book.publishDate = ' '\r\n            this.book.nrPages = ' '\r\n            this.book.publisher = ' '\r\n            this.book.language = ' '\r\n            this.book.thumbnailUrl = ' '\r\n            this.reading = ''\r\n          } catch (error) {\r\n            this.success = null\r\n            this.dialog = false\r\n            this.error = error.response.data.error\r\n          }\r\n        },\r\n       async find() {\r\n        try {\r\n            const response = await BookService.findBook(this.search.text)\r\n            console.log(JSON.stringify(response))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }        \r\n      },\r\n      async changeCard(bookClicked){\r\n        if (bookClicked % 1 === 0){\r\n          let bookId = bookClicked\r\n          const book = await BookService.getBookById(bookId)\r\n          this.book.title = book.data.title\r\n          this.book.subtitle = book.data.subtitle\r\n          this.book.authors = book.data.authors\r\n          this.book.publishDate = book.data.publishDate.substring(0,10)\r\n          this.book.nrPages = book.data.nrPages\r\n          this.book.publisher = book.data.publisher\r\n          this.book.language = book.data.language\r\n          this.book.thumbnailUrl = book.data.thumbnailUrl\r\n       } else {\r\n          const bookApi = (Buffer.from(bookClicked, 'base64').toString('ascii'))\r\n          const bookJson = JSON.parse(bookApi)\r\n          this.book.title = bookJson.title\r\n          this.book.subtitle = bookJson.subtitle\r\n          this.book.authors =  JSON.stringify(bookJson.authors).replace(/\"/g,'').replace(/\\[/,'').replace(/\\]/, '').replace(/,/,', ')\r\n          this.book.publishDate = bookJson.publishedDate.substring(0,10)\r\n          this.book.nrPages = bookJson.pageCount\r\n          this.book.publisher =bookJson.publisher\r\n          this.book.language = bookJson.language\r\n          this.book.thumbnailUrl = bookJson.thumbnail\r\n       }\r\n       this.tabs = 0\r\n      }\r\n    },\r\n    rules: {\r\n        required: (value) => !!value || 'Required.'\r\n      },\r\n    watch: {\r\n      tabs: function (value) {\r\n        const route = {\r\n          name : 'Add a book'\r\n        }\r\n        route.query = {\r\n          tab: value              \r\n        }\r\n        this.$router.push(route)    \r\n       },\r\n       search: _.debounce(async function (value) {\r\n        this.bookListDb = []\r\n        this.bookListApi = []\r\n      \r\n      if (this.search !== '') { //only proceed if search is not empty\r\n        const route = {\r\n        path : 'add-book?tab=1'\r\n      }\r\n        route.query = {\r\n          search: this.search               \r\n        }\r\n        this.$router.push(route)        //puts search text on the query (URL)\r\n        //Search DB\r\n        const results = (await BookService.search(this.search)).data  //search the db for books with same title or author\r\n        for (var i = 0; i < results.length; i++){\r\n          var obj = results[i]\r\n          var BookId = obj['id']\r\n          let title = ''\r\n          let authors = ''\r\n          if (obj['title'].length > 51) {\r\n            title = obj['title'].substring(0, 51)+'...' \r\n          } else {\r\n            title = obj['title']\r\n          }\r\n          if (obj['authors'].length > 22) {\r\n            authors = obj['authors'].substring(0, 22)+'...' \r\n          } else {\r\n            authors = obj['authors']\r\n          }\r\n          var URL = BookId\r\n          var dbbook = new Book(\r\n              title,\r\n              URL, \r\n              authors,\r\n              obj['thumbnailUrl']\r\n          )       \r\n          this.bookListDb.push(dbbook)       //add new book to the array\r\n          this.openExpansionPanel = 0\r\n        }\r\n        //SEARCH API\r\n        const resultsApi = (await BookService.searchApi(this.search)).data  //search the db for books with same title\r\n        for (var i = 0; i < resultsApi.length; i++){\r\n          var obj = resultsApi[i]\r\n          const bookContent = Buffer.from(JSON.stringify(obj)).toString('base64')\r\n          let authorsString = ''\r\n          if (obj['authors'] != undefined) {\r\n            authorsString = JSON.stringify(obj['authors']).replace(/\"/g,'').replace(/\\[/,'').replace(/\\]/, '') //remove all brackets and quotations marks from string\r\n          }\r\n          let title = ''\r\n          if (obj['title'].length > 49) {\r\n            title = obj['title'].substring(0, 49)+'(...)' \r\n          } else {\r\n            title = obj['title']\r\n          }\r\n          let authors = ''\r\n          if (authorsString.length > 25) {\r\n            authors = authorsString.substring(0, 20)+'(...)' \r\n          } else {\r\n            authors = authorsString\r\n          }\r\n          var newBookApi = new Book(\r\n              title,\r\n              bookContent, \r\n              authors,\r\n              obj['thumbnail']\r\n          )\r\n          this.bookListApi.push(newBookApi)       //add new book to the array\r\n        }\r\n      }\r\n      \r\n    }, 700),\r\n    '$route.query.tab' : {    //puts the text of the query in the search textfield\r\n      immediate: true,\r\n      async handler (value) {\r\n        if(value==0){\r\n          this.tabs = 0\r\n        } else if (value==1){\r\n          this.tabs = 1\r\n        } \r\n      }\r\n    }\r\n    },\r\n    computed: {\r\n    filteredListDb() {\r\n      return this.bookListDb.filter(book => {\r\n          if (this.search != undefined) {\r\n            return book.title.toLowerCase().includes(this.search.toLowerCase()) || book.author.toLowerCase().includes(this.search.toLowerCase())\r\n          } else {\r\n            return ''\r\n          }\r\n      })\r\n    },\r\n    filteredListApi() {\r\n      if (this.search != undefined) {\r\n        return this.bookListApi.filter(book => {\r\n          return book.title.toLowerCase().includes(this.search.toLowerCase()) || book.author.toLowerCase().includes(this.search.toLowerCase())\r\n        })\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n  }\r\n}\r\nclass Book {\r\n  constructor(title, bookData, author, img) {\r\n    this.title = title;\r\n    this.bookData = bookData;\r\n    this.author = author;\r\n    this.img = img;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nhtml, body {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\ndiv#app {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  \r\n  .search-wrapper {\r\n    position: relative;\r\n    label {\r\n      position: absolute;\r\n      font-size: 12px;\r\n      color: rgba(0,0,0,.50);\r\n      top: 8px;\r\n      left: 12px;\r\n      z-index: -1;\r\n      transition: .15s all ease-in-out;\r\n    }\r\n    input {\r\n      padding: 4px 12px;\r\n      color: rgba(0,0,0,.70);\r\n      border: 1px solid rgba(0,0,0,.12);\r\n      transition: .15s all ease-in-out;\r\n      background: white;\r\n      &:focus {\r\n        outline: none;\r\n        transform: scale(1.05);\r\n        & + label  {\r\n          font-size: 10px;\r\n          transform: translateY(-24px) translateX(-12px);\r\n        }\r\n      }\r\n      &::-webkit-input-placeholder {\r\n          font-size: 12px;\r\n          color: rgba(0,0,0,.50);\r\n          font-weight: 100;\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    text-align:center;\r\n    max-width: 100%;\r\n    width: 1100px;\r\n    margin:0 auto;\r\n    flex-wrap: wrap;\r\n    padding-top: 12px;\r\n  }\r\n\r\n  .card {\r\n    box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 6px, rgba(0, 0, 0, 0.117647) 0px 1px 4px;\r\n    width: 250px;\r\n    height: 400px;\r\n    max-width: 250px;\r\n    max-height: 275px;\r\n    margin: 12px;\r\n    transition: .15s all ease-in-out;\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      padding: 12px;\r\n      color: #03A9F4;\r\n      font-size: 24px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      img {\r\n        height: 150px;\r\n      }\r\n      small {\r\n        font-size: 10px;\r\n        padding: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  .hotpink {\r\n    background: hotpink;\r\n  }\r\n\r\n  .green {\r\n    background: green;\r\n  }\r\n\r\n  .box {\r\n    width: 100px;\r\n    height: 100px;\r\n    border: 1px solid rgba(0,0,0,.12);\r\n  }\r\n}\r\n</style>\r\n"]}]}