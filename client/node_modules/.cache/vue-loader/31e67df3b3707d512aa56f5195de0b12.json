{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\components\\core\\Drawer.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\components\\core\\Drawer.vue","mtime":1546808259554},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app-drawer {\n  .v-list__tile {\n    border-radius: 4px;\n    &--buy {\n      margin-top: auto;\n      margin-bottom: 17px;\n    }\n  }\n  .v-image__image--contain {\n    top: 9px;\n    height: 60%;\n  }\n  .search-input {\n    margin-bottom: 30px !important;\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n}\n",{"version":3,"sources":["Drawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Drawer.vue","sourceRoot":"src\\components\\core","sourcesContent":["<script> /* eslint-disable */ </script>\n<template>\n  <v-navigation-drawer id=\"app-drawer\" v-model=\"inputValue\" app dark floating persistent mobile-break-point=\"991\" width=\"260\">\n    <v-img :src=\"`https://i.imgur.com/6eXf3ev.jpg`\" height=\"100%\">\n      <v-layout class=\"fill-height\" tag=\"v-list\" column>\n        <v-list-tile avatar>\n          <v-list-tile-avatar color=\"white\">\n            <v-img :src=\"logo\" height=\"34\" contain />\n          </v-list-tile-avatar>\n          <v-list-tile-title v-if=\"!this.$store.state.isUserLoggedIn\" class=\"title\" @click=\"navigateTo({name: 'Homepage'})\">\n            myLibrary\n          </v-list-tile-title>\n          <v-list-tile-title v-if=\"this.$store.state.isUserLoggedIn\" class=\"title\" @click=\"navigateTo({name: 'Dashboard'})\">\n            myLibrary\n          </v-list-tile-title>\n        </v-list-tile>\n        <v-divider/>\n        <div v-if=\"this.$store.state.isUserLoggedIn && (this.$store.state.userHasLibrary || this.$store.state.userIsPartOfLibrary)\">\n        <v-list-group no-action >\n        <v-list-tile slot=\"activator\" :active-class=\"color\" avatar class=\"v-list-item\" style=\"pointer-events: none;\">\n            <v-list-tile-action>\n              <v-icon>mdi-library-books</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title> Change library </v-list-tile-title>\n        </v-list-tile>\n        <v-list-tile v-for=\"(libraryNames, index) in libraryNames\"\n            :key=\"index\"\n            @click=\"changeLibrary(libraryNames.name)\" avatar class=\"v-list-item\">\n          <v-list-tile-title>{{libraryNames.name}}</v-list-tile-title>\n        </v-list-tile>\n        </v-list-group>\n        <br>\n        <v-divider/>\n        </div>\n        <v-list-tile  v-if=\"this.$store.state.isUserLoggedIn && !this.$store.state.userHasLibrary\" to=\"/create-library\" :active-class=\"color\" avatar class=\"v-list-item\">\n            <v-list-tile-action>\n              <v-icon>mdi-library-plus</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title>Create library</v-list-tile-title>\n          </v-list-tile>\n          <v-list-tile  v-if=\"this.$store.state.isUserLoggedIn && this.$store.state.userHasLibrary\" to=\"/manage-library\" :active-class=\"color\" avatar class=\"v-list-item\">\n            <v-list-tile-action>\n              <v-icon>mdi-library</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title>Manage library</v-list-tile-title>\n          </v-list-tile>\n          <v-list-tile  v-if=\"this.$store.state.isUserLoggedIn && (this.$store.state.userHasLibrary || this.$store.state.userIsPartOfLibrary)\" to=\"/add-book\" :active-class=\"color\" avatar class=\"v-list-item\">\n            <v-list-tile-action>\n              <v-icon>mdi-book-plus</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title>Add book</v-list-tile-title>\n          </v-list-tile>\n          <v-list-tile  v-if=\"this.$store.state.isUserLoggedIn && (this.$store.state.userHasLibrary || this.$store.state.userIsPartOfLibrary)\" to=\"/add-loan\" :active-class=\"color\" avatar class=\"v-list-item\">\n            <v-list-tile-action>\n              <v-icon>mdi-checkbook</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title>Add loan</v-list-tile-title>\n          </v-list-tile>\n        <v-flex v-if=\"!this.$store.state.isUserLoggedIn\">       \n          <v-list-tile  v-for=\"(link, i) in linksNotLoggedIn\" :key=\"i\" :to=\"link.to\" :active-class=\"color\" avatar class=\"v-list-item\">\n            <v-list-tile-action>\n              <v-icon>{{ link.icon }}</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-title v-text=\"link.text\" />\n          </v-list-tile>\n        </v-flex>\n        <v-flex v-if=\"this.$store.state.isUserLoggedIn\">       \n        <v-list-tile v-for=\"(link, i) in linksLoggedIn\" :key=\"i\" :to=\"link.to\" :active-class=\"color\" avatar class=\"v-list-item\">\n          <v-list-tile-action>\n            <v-icon>{{ link.icon }}</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-title v-text=\"link.text\" />\n        </v-list-tile>\n        </v-flex>\n        <v-list-tile  v-if=\"this.$store.state.isUserLoggedIn\" :active-class=\"color\" avatar class=\"v-list-item\" @click=\"logout\">\n          <v-list-tile-action>\n            <v-icon>mdi-logout</v-icon>\n          </v-list-tile-action>\n           <v-list-tile-title> Logout </v-list-tile-title>\n        </v-list-tile>\n\n      </v-layout>\n    </v-img>\n  </v-navigation-drawer>\n</template>\n\n<script>\n  // Utilities\nimport LibraryService from '@/services/LibraryService'\nimport store from '@/store/index'\n  import {\n    mapMutations,\n    mapState\n  } from 'vuex'\n  \n  export default {\n    data: () => ({\n      libraryNames: null,\n      logo: 'https://img.icons8.com/metro/1600/book-stack.png',\n      linksNotLoggedIn: [\n        {\n          to: '/',\n          icon: 'mdi-home',\n          text: 'Home page'\n        },\n        {\n          to: '/register',\n          icon: 'mdi-account-plus',\n          text: 'Register'\n        },\n        {\n          to: '/login',\n          icon: 'mdi-account',\n          text: 'Login'\n        }\n      ],\n      linksLoggedIn: [\n        {\n          to: '/dashboard',\n          icon: 'mdi-view-dashboard',\n          text: 'Dashboard'\n        },\n        {\n          to: '/user-profile',\n          icon: 'mdi-account',\n          text: 'User Profile'\n        },\n        {\n          to: '/table-list',\n          icon: 'mdi-clipboard-outline',\n          text: 'Table List'\n        },\n        {\n          to: '/typography',\n          icon: 'mdi-format-font',\n          text: 'Typography'\n        },\n        {\n          to: '/icons',\n          icon: 'mdi-chart-bubble',\n          text: 'Icons'\n        },\n        {\n          to: '/maps',\n          icon: 'mdi-map-marker',\n          text: 'Maps'\n        },\n        {\n          to: '/notifications',\n          icon: 'mdi-bell',\n          text: 'Notifications'\n        }\n      ],\n      responsive: false\n    }),\n    computed: {\n      ...mapState('app',['image', 'color']),\n      inputValue: {\n        get() {\n          return this.$store.state.app.drawer\n        },\n        set(val) {\n          this.setDrawer(val)\n        }\n      },\n      items() {\n        return this.$t('Layout.View.items')\n      },\n      ...mapState([\n       'library',\n       'user'\n      ])\n    },\n    async mounted() {\n      this.onResponsiveInverted()\n      window.addEventListener('resize', this.onResponsiveInverted)\n      try {\n            if(this.$store.state.user){\n              const response = await LibraryService.getUserLibrarys(this.$store.state.user.id)\n              var names = response.data\n              this.libraryNames = names\n            }\n      } catch (err) {\n        alert(err)\n      }\n\n\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.onResponsiveInverted)\n    },\n    methods: {\n      ...mapMutations('app', ['setDrawer', 'toggleDrawer']),\n      onResponsiveInverted() {\n        if (window.innerWidth < 991) {\n          this.responsive = true\n        } else {\n          this.responsive = false\n        }\n      },\n      navigateTo(route) {\n        this.$router.push(route)\n      },\n      logout () {\n        this.$store.dispatch('setToken', null)\n        this.$store.dispatch('setUser', null)\n        this.$store.dispatch('setHasLibrary', null)\n        this.$store.dispatch('setIsPartOfLibrary', null)\n        this.$store.dispatch('setLibrary', null)\n        this.$router.push({\n          name: 'Login'\n        })\n      },\n      async changeLibrary(libraryName) {\n        const response = await LibraryService.getLibraryByName(libraryName)\n        this.$store.dispatch('setLibrary', response.data)\n        if (this.$store.state.user.id == response.data.UserId){\n          this.$store.dispatch('setIsPartOfLibrary', false)\n          this.$store.dispatch('setHasLibrary', true)\n        } else {\n          this.$store.dispatch('setIsPartOfLibrary', true)\n          this.$store.dispatch('setHasLibrary', false)\n        }\n      }\n    },\n    watch : {\n      async 'library'() {\n        try {\n        if(this.$store.state.user){\n          const response = await LibraryService.getUserLibrarys(this.$store.state.user.id)\n           var names = response.data\n\n        this.libraryNames = names\n        }\n        } catch (err) {\n          alert(err)\n        }\n        // if (this.$store.state.userHasLibrary){\n        //   this.linksLoggedIn.splice(1, 0, this.manageLib)\n        // }\n        // if (!(this.$store.state.userHasLibrary)){\n        //   this.linksLoggedIn.splice(1, 0, this.createLib)\n        // }\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  #app-drawer {\n    .v-list__tile {\n      border-radius: 4px;\n      &--buy {\n        margin-top: auto;\n        margin-bottom: 17px;\n      }\n    }\n    .v-image__image--contain {\n      top: 9px;\n      height: 60%;\n    }\n    .search-input {\n      margin-bottom: 30px !important;\n      padding-left: 15px;\n      padding-right: 15px;\n    }\n  }\n</style>\n"]}]}