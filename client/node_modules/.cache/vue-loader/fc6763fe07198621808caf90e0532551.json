{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\AddLoan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\AddLoan.vue","mtime":1547648937169},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BookManually from './BookManually'\nimport PersonalReadingService from '@/services/PersonalReadingService'\nimport BookService from '@/services/BookService'\nimport AuthenticationService from '@/services/AuthenticationService'\nimport LoanService from '@/services/LoanService'\n\nexport default {\n  components: {\n    BookManually\n  },\n  data() {\n    return {\n      dialogBook: false,\n      optionFrom: ['Me', 'External user'],\n      optionsTo: ['Me', 'Other user', 'External user'],\n      Books: [],\n      PersonalReadingIds: [],\n      book: {\n          title: null,\n          subtitle: null,\n          authors: null,\n          publishDate: null,\n          nrPages: null,\n          publisher: null,\n          language: null,\n          thumbnailUrl : null\n        },\n      Loan : {\n          UserLenterId: null,\n          UserBorrowerUsernameOrEmail: null,\n          PersonalReadingId: null,\n          BookId: null,\n          startDate: new Date().toISOString().substr(0, 10),\n          externalUserName: null,\n          status: null\n      },\n      userLoggedInUsername: '@'+this.$store.state.user.username,\n      bookNamesSelect: null,\n      lenterIsUser: null,\n      borrowerIsUser: null,\n      selectFrom: null,\n      selectTo: null,\n      datepickerStart: false,\n      datepickerEnd: false,\n      datepicker: null,\n      dialogLenter: false,\n      dialogBorrower: false,\n      userLabel: false,\n      error: null,\n      success: null,\n      required: (value) => !!value || 'Required.'\n    }\n  },\n  methods: {\n    async addLoan() {\n      try {\n       if (this.selectFrom==\"Me\"){\n         this.Loan.IdLenter = this.$store.state.user.id\n         if(this.borrowerIsUser){\n           const UserBorrower = (await AuthenticationService.getUserByEmailOrUsername(this.Loan.UserBorrowerUsernameOrEmail)).data\n           this.Loan.status = 'Lent to @'+UserBorrower.username\n           this.Loan.UserBorrowerId = UserBorrower.id\n         }\n         if(!(this.borrowerIsUser)){\n         this.Loan.status = 'Lent to '+ this.Loan.externalUserName + '[outside user]'\n         }\n\n        let selectedIndex = this.Books.indexOf(this.bookNamesSelect)      //searching for the PersonalReadingId\n        const personalReadingId = this.PersonalReadingIds[selectedIndex]  //of the select option books\n\n        const response = await LoanService.addLoan({\n          PersonalReadingId : personalReadingId,\n          UserLenterId: this.$store.state.user.id ,\n          UserBorrowerId: this.Loan.UserBorrowerId,\n          ExternalBookId: null,\n          startDate: this.Loan.startDate,\n          status: this.Loan.status\n       })\n       this.Loan.UserBorrowerId = null\n       this.error= ''\n       this.success = 'Loan added to your list.'\n       } else if (this.selectFrom == 'External user') {\n         this.Loan.status = 'Lent from '+ this.Loan.externalUserName + '[outside user]'\n      \n        //creating the book\n        if (!(this.subtitle)){\n          this.book.subtitle = 'No subtitle'\n        }\n        const areAllFieldsFilledIn = Object\n          .keys(this.book)\n          .every(key => !!this.book[key])\n          if (!areAllFieldsFilledIn){\n            this.error= 'Please fill all the required fields about the book.'\n            this.dialog = false\n            return\n          }\n          const responseBook = await BookService.createBook(this.book)\n          //creating the loan\n         const response = await LoanService.addLoan({\n          PersonalReadingId : null,\n          UserLenterId: null,\n          UserBorrowerId: this.$store.state.user.id,\n          ExternalBookId: responseBook.data.id,\n          startDate: this.Loan.startDate,\n          status: this.Loan.status\n       })\n        this.success = 'Loan added to your list'\n       } else {\n         this.error = 'Some error has occured. Please try again later.'\n       }\n      } catch (error) {\n        this.success = null\n        this.error = error.response.data.error\n      }\n    }\n    // lenterIsUserMethod(){\n    //     this.lenterIsUser = true\n    //     this.dialogLenter = false\n    // },\n    // lenterIsNotUserMethod(){\n    //     this.lenterIsUser = false\n    //     this.dialogLenter = false\n    // },\n    // borrowerIsUserMethod(){\n    //     this.borrowerIsUser = true\n    //     this.dialogBorrower = false\n    // },\n    // borrowerIsNotUserMethod(){\n    //     this.borrowerIsUser = false\n    //     this.dialogBorrower = false\n    // }\n  },\n  watch: {\n      'selectFrom': async function(newVal) {\n          if (this.selectTo == newVal){\n              this.selectFrom = ''\n              this.selectTo = ''\n              \n          }\n          if (newVal == 'Other user'){\n                  this.selectTo = 'Me'\n                  this.lenterIsUser = true\n                  this.borrowerIsUser = null                   \n                 // this.dialogLenter=true\n          } else if (newVal == 'Me') {\n                  this.Books = [] //clears the array, in case the user changed library\n                  //this.selectTo = ''  \n                  this.lenterIsUser = null  \n                  this.UserLenterId = this.$store.state.user.id\n                  //Search on the backend for book names from user that's logged in, in the library that he has open\n                  const personalReadingsId = (await PersonalReadingService.getPersonalReadingByLibraryUser(this.$store.state.user.id, this.$store.state.library.id)).data\n                  for(var i = 0; i < personalReadingsId.length; i++) {\n                    var obj = personalReadingsId[i];\n                    const bookName = await BookService.getBookById(obj.BookId)\n                     this.Books.push(bookName.data.title);\n                     this.PersonalReadingIds.push(bookName.data.id);\n                  }\n                  // const bookName = await BookService.getBookById(personalReadingsId.data.BookId)\n                  // alert(JSON.stringify(bookName))\n                  \n          } else if (newVal == 'External user'){\n\n              this.selectTo='Me'\n              this.lenterIsUser = false             \n          }\n      },\n      'selectTo': function (newVal) {\n        //  if (this.selectFrom == newVal){\n        //       this.selectTo = ''\n        //       this.selectFrom = ''\n        //       return\n        //   }\n          // if (newVal == 'Other user'){\n          //     this.borrowerIsUser = true\n          //     this.selectFrom = 'Me'\n          // } else \n          if (newVal == 'Me') {\n              this.UserBorrowerId = this.$store.state.user.id\n              this.borrowerIsUser = null\n          } else  if (newVal == 'External user'){\n            this.Loan.UserBorrowerUsernameOrEmail = ''\n            this.selectFrom = 'Me'\n            this.borrowerIsUser = false\n          } else if (newVal == 'Other user'){\n            this.Loan.externalUserName = ''\n            this.selectFrom = 'Me'\n            this.borrowerIsUser = true\n            //IMPLEMENT HERE -> TONS OF BUGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\n          }\n\n          if (this.selectFrom == newVal){\n                  this.selectFrom = ''\n          } \n          \n        },\n        '$store.state.library': function (newVal) {\n          this.selectTo = ''\n          this.selectFrom = ''\n          this.lenterIsUser = null\n          this.borrowerIsUser = null\n          this.bookNamesSelect = ''\n        }\n\n  }\n}\n\n",{"version":3,"sources":["AddLoan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"AddLoan.vue","sourceRoot":"src\\views","sourcesContent":["<script>/*eslint-disable */ </script>\r\n<template>\r\n  <v-container fill-height fluid grid-list-xl>\r\n    <v-layout justify-center wrap>\r\n      <v-flex xs12 md8>\r\n        <material-card color=\"green\" title=\"Inser new loan\">\r\n          <v-form>\r\n            <v-container py-0>  \r\n                <v-layout wrap>\r\n                  <v-flex xs12 md6>\r\n                    <v-select :items=\"optionFrom\" v-model=\"selectFrom\" label=\"From\"></v-select>\r\n                  </v-flex>\r\n                  <v-flex xs12 md6>\r\n                    <v-select :items=\"optionsTo\"  v-model=\"selectTo\" label=\"To\"></v-select>\r\n                  </v-flex>\r\n                  <v-flex xs12 md6 v-if=\"(!lenterIsUser && lenterIsUser != null) || this.selectFrom=='Me'\">\r\n                    <v-text-field label=\"From\"  v-if=\"!lenterIsUser && lenterIsUser != null\"  placeholder=\"Person name and surname\" required :rules=\"[required]\" type=\"text\" v-model=\"Loan.externalUserName\"></v-text-field>    \r\n                    <v-text-field label=\"From\"  v-if=\"this.selectFrom=='Me'\" v-model=\"userLoggedInUsername\" disabled type=\"text\" ></v-text-field>        \r\n                  </v-flex>\r\n                  <v-flex xs12 md6 v-if=\"borrowerIsUser || (!borrowerIsUser && borrowerIsUser != null) || this.selectTo=='Me'\" >\r\n                    <v-text-field label=\"To\"  v-if=\"borrowerIsUser\" placeholder=\"User e-mail or @username\" required :rules=\"[required]\" type=\"text\" v-model=\"Loan.UserBorrowerUsernameOrEmail\"></v-text-field>\r\n                    <v-text-field label=\"To\" v-if=\"!borrowerIsUser && borrowerIsUser != null\" placeholder=\"Person name and surname\" required :rules=\"[required]\" type=\"text\" v-model=\"Loan.externalUserName\"></v-text-field>\r\n                    <v-text-field label=\"From\"  v-if=\"this.selectTo=='Me'\" v-model=\"userLoggedInUsername\" disabled type=\"text\" ></v-text-field>\r\n                  </v-flex>\r\n                  <v-flex xs12 md12 v-if=\"selectFrom=='Me'\">\r\n                    <v-autocomplete v-model=\"bookNamesSelect\" :items=\"Books\" :label=\"`Book`\" persistent-hint>\r\n                    <v-slide-x-reverse-transition slot=\"append-outer\" mode=\"out-in\">\r\n                    </v-slide-x-reverse-transition>\r\n                    </v-autocomplete>\r\n                  </v-flex>\r\n                  <v-flex xs12 md12>\r\n                    <v-text-field v-if=\"!lenterIsUser && lenterIsUser != null\" label=\"Book\" required :rules=\"[required]\" v-model=\"book.title\" @click=\"dialogBook=true\" ></v-text-field>\r\n                  </v-flex>\r\n                <br>\r\n               <v-flex xs12 md6>\r\n                <v-menu :close-on-content-click=\"false\" v-model=\"datepickerStart\" :nudge-right=\"40\" lazy transition=\"scale-transition\" offset-y full-width min-width=\"290px\">\r\n                  <v-text-field slot=\"activator\" v-model=\"Loan.startDate\" label=\"Start date\" prepend-icon=\"event\" readonly></v-text-field>\r\n                  <v-date-picker v-model=\"Loan.startDate\" @input=\"datepickerStart = false\"></v-date-picker>\r\n                </v-menu>\r\n               </v-flex>\r\n                <v-flex xs12 md6></v-flex>           \r\n              \r\n                <v-alert outline v-if=\"success\" :value=\"true\" type=\"success\">\r\n                {{success}}.\r\n                </v-alert>\r\n                <v-alert outline  v-if=\"error\" :value=\"true\" type=\"error\">\r\n                {{error}}\r\n                </v-alert>\r\n              \r\n              <v-flex xs12 text-xs-right>\r\n                <v-btn color=\"success\" v-if=\"!lenterIsUser && lenterIsUser != null\" dark @click=\"dialogBook = true\">Edit book </v-btn> \r\n                <v-btn color=\"success\" @click=\"addLoan\"> Submit </v-btn>\r\n              </v-flex>\r\n              <v-dialog v-model=\"dialogBook\" fullscreen hide-overlay transition=\"dialog-bottom-transition\" scrollable>\r\n                <v-card tile>\r\n                <v-toolbar card dark color=\"primary\">\r\n                    <v-btn icon dark @click=\"dialogBook = false\">\r\n                        <v-icon>close</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>Book information</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                    <v-toolbar-items>\r\n                        <v-btn dark flat @click=\"dialogBook = false\">Save</v-btn>\r\n                    </v-toolbar-items>\r\n                </v-toolbar>\r\n            <v-card-text>\r\n              <v-flex xs6 offset-xs3>\r\n              <v-text-field label=\"Title\"  required :rules=\"[required]\" v-model=\"book.title\"></v-text-field>\r\n              <v-text-field label=\"Subtitle\"  v-model=\"book.subtitle\"></v-text-field>\r\n              <v-text-field label=\"Authors\"  required :rules=\"[required]\" v-model=\"book.authors\"></v-text-field>\r\n              <v-flex xs12 sm6 md4>\r\n                <v-menu :close-on-content-click=\"false\" v-model=\"datepicker\" :nudge-right=\"40\" lazy transition=\"scale-transition\" offset-y full-width min-width=\"290px\">\r\n                  <v-text-field slot=\"activator\" v-model=\"book.publishDate\" label=\"Publish date\" prepend-icon=\"event\" readonly></v-text-field>\r\n                  <v-date-picker v-model=\"book.publishDate\" @input=\"datepicker = false\"></v-date-picker>\r\n                </v-menu>\r\n              </v-flex>\r\n              <v-text-field label=\"Number of pages\" type=\"number\" required :rules=\"[required]\"  v-model=\"book.nrPages\"></v-text-field>\r\n              <v-text-field label=\"Publisher\"  v-model=\"book.publisher\"></v-text-field>\r\n              <v-text-field label=\"Language\" required :rules=\"[required]\"  v-model=\"book.language\"></v-text-field>\r\n              <v-text-field label=\"Thumbnail URL\" required :rules=\"[required]\"  v-model=\"book.thumbnailUrl\"></v-text-field>\r\n                <v-btn dark flat class=\"blue\" @click=\"dialogBook = false\">Save</v-btn>\r\n              </v-flex>\r\n            </v-card-text>\r\n  \r\n            <div style=\"flex: 1 1 auto;\"></div>\r\n          </v-card>\r\n        </v-dialog>\r\n                </v-layout>\r\n</v-container>\r\n          </v-form>\r\n        </material-card>\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import BookManually from './BookManually'\r\n  import PersonalReadingService from '@/services/PersonalReadingService'\r\n  import BookService from '@/services/BookService'\r\n  import AuthenticationService from '@/services/AuthenticationService'\r\n  import LoanService from '@/services/LoanService'\r\n\r\n  export default {\r\n    components: {\r\n      BookManually\r\n    },\r\n    data() {\r\n      return {\r\n        dialogBook: false,\r\n        optionFrom: ['Me', 'External user'],\r\n        optionsTo: ['Me', 'Other user', 'External user'],\r\n        Books: [],\r\n        PersonalReadingIds: [],\r\n        book: {\r\n            title: null,\r\n            subtitle: null,\r\n            authors: null,\r\n            publishDate: null,\r\n            nrPages: null,\r\n            publisher: null,\r\n            language: null,\r\n            thumbnailUrl : null\r\n          },\r\n        Loan : {\r\n            UserLenterId: null,\r\n            UserBorrowerUsernameOrEmail: null,\r\n            PersonalReadingId: null,\r\n            BookId: null,\r\n            startDate: new Date().toISOString().substr(0, 10),\r\n            externalUserName: null,\r\n            status: null\r\n        },\r\n        userLoggedInUsername: '@'+this.$store.state.user.username,\r\n        bookNamesSelect: null,\r\n        lenterIsUser: null,\r\n        borrowerIsUser: null,\r\n        selectFrom: null,\r\n        selectTo: null,\r\n        datepickerStart: false,\r\n        datepickerEnd: false,\r\n        datepicker: null,\r\n        dialogLenter: false,\r\n        dialogBorrower: false,\r\n        userLabel: false,\r\n        error: null,\r\n        success: null,\r\n        required: (value) => !!value || 'Required.'\r\n      }\r\n    },\r\n    methods: {\r\n      async addLoan() {\r\n        try {\r\n         if (this.selectFrom==\"Me\"){\r\n           this.Loan.IdLenter = this.$store.state.user.id\r\n           if(this.borrowerIsUser){\r\n             const UserBorrower = (await AuthenticationService.getUserByEmailOrUsername(this.Loan.UserBorrowerUsernameOrEmail)).data\r\n             this.Loan.status = 'Lent to @'+UserBorrower.username\r\n             this.Loan.UserBorrowerId = UserBorrower.id\r\n           }\r\n           if(!(this.borrowerIsUser)){\r\n           this.Loan.status = 'Lent to '+ this.Loan.externalUserName + '[outside user]'\r\n           }\r\n\r\n          let selectedIndex = this.Books.indexOf(this.bookNamesSelect)      //searching for the PersonalReadingId\r\n          const personalReadingId = this.PersonalReadingIds[selectedIndex]  //of the select option books\r\n\r\n          const response = await LoanService.addLoan({\r\n            PersonalReadingId : personalReadingId,\r\n            UserLenterId: this.$store.state.user.id ,\r\n            UserBorrowerId: this.Loan.UserBorrowerId,\r\n            ExternalBookId: null,\r\n            startDate: this.Loan.startDate,\r\n            status: this.Loan.status\r\n         })\r\n         this.Loan.UserBorrowerId = null\r\n         this.error= ''\r\n         this.success = 'Loan added to your list.'\r\n         } else if (this.selectFrom == 'External user') {\r\n           this.Loan.status = 'Lent from '+ this.Loan.externalUserName + '[outside user]'\r\n        \r\n          //creating the book\r\n          if (!(this.subtitle)){\r\n            this.book.subtitle = 'No subtitle'\r\n          }\r\n          const areAllFieldsFilledIn = Object\r\n            .keys(this.book)\r\n            .every(key => !!this.book[key])\r\n            if (!areAllFieldsFilledIn){\r\n              this.error= 'Please fill all the required fields about the book.'\r\n              this.dialog = false\r\n              return\r\n            }\r\n            const responseBook = await BookService.createBook(this.book)\r\n            //creating the loan\r\n           const response = await LoanService.addLoan({\r\n            PersonalReadingId : null,\r\n            UserLenterId: null,\r\n            UserBorrowerId: this.$store.state.user.id,\r\n            ExternalBookId: responseBook.data.id,\r\n            startDate: this.Loan.startDate,\r\n            status: this.Loan.status\r\n         })\r\n          this.success = 'Loan added to your list'\r\n         } else {\r\n           this.error = 'Some error has occured. Please try again later.'\r\n         }\r\n        } catch (error) {\r\n          this.success = null\r\n          this.error = error.response.data.error\r\n        }\r\n      }\r\n      // lenterIsUserMethod(){\r\n      //     this.lenterIsUser = true\r\n      //     this.dialogLenter = false\r\n      // },\r\n      // lenterIsNotUserMethod(){\r\n      //     this.lenterIsUser = false\r\n      //     this.dialogLenter = false\r\n      // },\r\n      // borrowerIsUserMethod(){\r\n      //     this.borrowerIsUser = true\r\n      //     this.dialogBorrower = false\r\n      // },\r\n      // borrowerIsNotUserMethod(){\r\n      //     this.borrowerIsUser = false\r\n      //     this.dialogBorrower = false\r\n      // }\r\n    },\r\n    watch: {\r\n        'selectFrom': async function(newVal) {\r\n            if (this.selectTo == newVal){\r\n                this.selectFrom = ''\r\n                this.selectTo = ''\r\n                \r\n            }\r\n            if (newVal == 'Other user'){\r\n                    this.selectTo = 'Me'\r\n                    this.lenterIsUser = true\r\n                    this.borrowerIsUser = null                   \r\n                   // this.dialogLenter=true\r\n            } else if (newVal == 'Me') {\r\n                    this.Books = [] //clears the array, in case the user changed library\r\n                    //this.selectTo = ''  \r\n                    this.lenterIsUser = null  \r\n                    this.UserLenterId = this.$store.state.user.id\r\n                    //Search on the backend for book names from user that's logged in, in the library that he has open\r\n                    const personalReadingsId = (await PersonalReadingService.getPersonalReadingByLibraryUser(this.$store.state.user.id, this.$store.state.library.id)).data\r\n                    for(var i = 0; i < personalReadingsId.length; i++) {\r\n                      var obj = personalReadingsId[i];\r\n                      const bookName = await BookService.getBookById(obj.BookId)\r\n                       this.Books.push(bookName.data.title);\r\n                       this.PersonalReadingIds.push(bookName.data.id);\r\n                    }\r\n                    // const bookName = await BookService.getBookById(personalReadingsId.data.BookId)\r\n                    // alert(JSON.stringify(bookName))\r\n                    \r\n            } else if (newVal == 'External user'){\r\n\r\n                this.selectTo='Me'\r\n                this.lenterIsUser = false             \r\n            }\r\n        },\r\n        'selectTo': function (newVal) {\r\n          //  if (this.selectFrom == newVal){\r\n          //       this.selectTo = ''\r\n          //       this.selectFrom = ''\r\n          //       return\r\n          //   }\r\n            // if (newVal == 'Other user'){\r\n            //     this.borrowerIsUser = true\r\n            //     this.selectFrom = 'Me'\r\n            // } else \r\n            if (newVal == 'Me') {\r\n                this.UserBorrowerId = this.$store.state.user.id\r\n                this.borrowerIsUser = null\r\n            } else  if (newVal == 'External user'){\r\n              this.Loan.UserBorrowerUsernameOrEmail = ''\r\n              this.selectFrom = 'Me'\r\n              this.borrowerIsUser = false\r\n            } else if (newVal == 'Other user'){\r\n              this.Loan.externalUserName = ''\r\n              this.selectFrom = 'Me'\r\n              this.borrowerIsUser = true\r\n              //IMPLEMENT HERE -> TONS OF BUGSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n            }\r\n\r\n            if (this.selectFrom == newVal){\r\n                    this.selectFrom = ''\r\n            } \r\n            \r\n          },\r\n          '$store.state.library': function (newVal) {\r\n            this.selectTo = ''\r\n            this.selectFrom = ''\r\n            this.lenterIsUser = null\r\n            this.borrowerIsUser = null\r\n            this.bookNamesSelect = ''\r\n          }\r\n\r\n    }\r\n  }\r\n  \r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}