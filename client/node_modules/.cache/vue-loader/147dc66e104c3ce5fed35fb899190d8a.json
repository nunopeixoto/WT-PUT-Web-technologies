{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\RegisterEnhanced.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\src\\views\\RegisterEnhanced.vue","mtime":1547648937272},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\q1w2\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AuthenticationService from '@/services/AuthenticationService'\nimport LibraryService from '@/services/LibraryService'\nexport default {\n  data() {\n    return {\n      email: this.$route.params.email,\n      password: null,\n      username: null,\n      confirmed: true,\n      error: null,\n      success: null,\n      required: (value) => !!value || 'Required.'\n    }\n  },\n  methods: {\n    async register() {\n      try {\n        this.error = null\n        const response = await AuthenticationService.enhancedregister({\n          email: this.email,\n          username: this.username,\n          password: this.password,\n          confirmed : true\n        })\n       const cenas = await LibraryService.becomeLibraryGuest(this.$route.params.email, this.$route.params.libraryId)     \n        this.success = 'Your account was registered successfully'\n        if((cenas.data.message) == 'Success'){\n          this.$router.push({\n            path:'/login'\n          })\n        }\n      } catch (error) {\n        this.success = null\n        if(error.response.data.error){\n        this.error = error.response.data.error\n        }else{\n          this.error = 'Error'\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["RegisterEnhanced.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterEnhanced.vue","sourceRoot":"src\\views","sourcesContent":["<script>/*eslint-disable */ </script>\n<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout justify-center wrap>\n      <v-flex xs12 md8>\n        <material-card color=\"green\" title=\"Register\">\n          <v-form>\n            <v-container py-0>\n              <v-layout wrap>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Email\" required :rules=\"[required]\" disabled v-model=\"email\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Username\" required :rules=\"[required]\" type=\"text\" v-model=\"username\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 md12>\n                  <v-text-field label=\"Password\" required :rules=\"[required]\" type=\"password\" v-model=\"password\" autocomplete=\"new-password\"></v-text-field>\n                </v-flex>\n                <v-alert outline v-if=\"success\" :value=\"true\" type=\"success\">\n                  {{success}}.\n                </v-alert>\n                <v-alert outline  v-if=\"error\" :value=\"true\" type=\"error\">\n                 {{error}}\n                </v-alert>\n                <v-flex xs12 text-xs-right>\n                  <v-btn class=\"mx-0 font-weight-light\" @click=\"register\" color=\"success\">\n                    Register\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-form>\n        </material-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n  import AuthenticationService from '@/services/AuthenticationService'\n  import LibraryService from '@/services/LibraryService'\n  export default {\n    data() {\n      return {\n        email: this.$route.params.email,\n        password: null,\n        username: null,\n        confirmed: true,\n        error: null,\n        success: null,\n        required: (value) => !!value || 'Required.'\n      }\n    },\n    methods: {\n      async register() {\n        try {\n          this.error = null\n          const response = await AuthenticationService.enhancedregister({\n            email: this.email,\n            username: this.username,\n            password: this.password,\n            confirmed : true\n          })\n         const cenas = await LibraryService.becomeLibraryGuest(this.$route.params.email, this.$route.params.libraryId)     \n          this.success = 'Your account was registered successfully'\n          if((cenas.data.message) == 'Success'){\n            this.$router.push({\n              path:'/login'\n            })\n          }\n        } catch (error) {\n          this.success = null\n          if(error.response.data.error){\n          this.error = error.response.data.error\n          }else{\n            this.error = 'Error'\n          }\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}