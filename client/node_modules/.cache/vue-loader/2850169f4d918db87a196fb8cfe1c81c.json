{"remainingRequest":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuno_\\Desktop\\client\\src\\views\\CreateLibrary.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nuno_\\Desktop\\client\\src\\views\\CreateLibrary.vue","mtime":1546718105672},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuno_\\Desktop\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LibraryService from '@/services/LibraryService'\nimport {mapState} from 'vuex'\nexport default {\n    computed: {\n      ...mapState([\n        'user'\n      ])\n    },\n    data() {\n      return {\n        library: {\n          name: null,\n          UserId: this.$store.state.user.id,\n        },\n        error: null,\n        success: null,\n        dialog: false,\n        required: (value) => !!value || 'Required.'\n      }\n    },\n    methods: {\n      async createLibrary() {\n        try {\n          this.error = null\n          const areAllFieldsFilledIn = Object\n          .keys(this.library)\n          .every(key => !!this.library[key])\n          if (!areAllFieldsFilledIn){\n            this.error= 'Please fill all the required fields'\n            this.dialog = false\n            return\n          }\n          const response = await LibraryService.create(this.library)\n          this.$store.dispatch('setLibrary', response.data)\n          this.$store.dispatch('setHasLibrary', true)\n          this.dialog = false\n          \n          this.success = `${response.data.name} has been created`\n\n        } catch (error) {\n          alert(error)\n          this.success = null\n          this.error = 'Some error happened. Please try again.'\n          this.dialog = false\n        }\n      }\n    }\n}\n",{"version":3,"sources":["CreateLibrary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateLibrary.vue","sourceRoot":"src\\views","sourcesContent":["<script>/*eslint-disable */ </script>\r\n<template>\r\n  <v-container fill-height fluid grid-list-xl>\r\n    <v-layout justify-center wrap>\r\n      <v-flex xs12 md8>\r\n        <material-card color=\"green\" title=\"Register\">\r\n          <v-form>\r\n            <v-container py-0>\r\n              <v-layout wrap>\r\n                <v-flex xs12 md12>\r\n                    <v-text-field label=\"Library name\"  required :rules=\"[required]\" v-model=\"library.name\"></v-text-field>\r\n                </v-flex>\r\n                \r\n                <v-alert v-if=\"success\" :value=\"true\" type=\"success\">\r\n                  {{success}}.\r\n                </v-alert>\r\n                <v-alert  v-if=\"error\" :value=\"true\" type=\"error\">\r\n                 {{error}}\r\n                </v-alert>\r\n                <v-flex xs12 text-xs-right>\r\n                  <v-btn class=\"mx-0 font-weight-light\" @click=\"dialog = true\" color=\"success\">\r\n                    Create library\r\n                  </v-btn>\r\n                </v-flex>\r\n              </v-layout>\r\n              <v-layout row justify-center>\r\n                <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\r\n                    <v-card>\r\n                        <v-card-title class=\"headline\">Warning</v-card-title>\r\n                        <v-card-text>Are you sure you want to create {{library.name}} library?</v-card-text>\r\n                        <v-card-actions>\r\n                            <v-spacer></v-spacer>\r\n                            <v-btn color=\"green darken-1\" flat @click=\"createLibrary\">Yes</v-btn>\r\n                            <v-btn color=\"green darken-1\" flat @click=\"dialog = false\">No</v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </v-dialog>\r\n               </v-layout>\r\n            </v-container>\r\n          </v-form>\r\n        </material-card>\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import LibraryService from '@/services/LibraryService'\r\n  import {mapState} from 'vuex'\r\n  export default {\r\n      computed: {\r\n        ...mapState([\r\n          'user'\r\n        ])\r\n      },\r\n      data() {\r\n        return {\r\n          library: {\r\n            name: null,\r\n            UserId: this.$store.state.user.id,\r\n          },\r\n          error: null,\r\n          success: null,\r\n          dialog: false,\r\n          required: (value) => !!value || 'Required.'\r\n        }\r\n      },\r\n      methods: {\r\n        async createLibrary() {\r\n          try {\r\n            this.error = null\r\n            const areAllFieldsFilledIn = Object\r\n            .keys(this.library)\r\n            .every(key => !!this.library[key])\r\n            if (!areAllFieldsFilledIn){\r\n              this.error= 'Please fill all the required fields'\r\n              this.dialog = false\r\n              return\r\n            }\r\n            const response = await LibraryService.create(this.library)\r\n            this.$store.dispatch('setLibrary', response.data)\r\n            this.$store.dispatch('setHasLibrary', true)\r\n            this.dialog = false\r\n            \r\n            this.success = `${response.data.name} has been created`\r\n\r\n          } catch (error) {\r\n            alert(error)\r\n            this.success = null\r\n            this.error = 'Some error happened. Please try again.'\r\n            this.dialog = false\r\n          }\r\n        }\r\n      }\r\n  }\r\n</script>"]}]}